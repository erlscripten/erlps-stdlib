module Erl.Posix.Msg(erlps__message__1) where
{-
This file has been autogenerated
DO NOT EDIT - Your changes WILL be overwritten
Use this code at your own risk - the authors are just a mischievous raccoon and a haskell devote
Erlscripten v0.2.0
-}

import Prelude
import Data.BigInt as DBI
import Data.Array as DA
import Data.Maybe as DM
import Data.Map as Map
import Data.Tuple as DT
import Erlang.Builtins as BIF
import Erlang.Binary as BIN
import Erlang.Helpers
import Erlang.Exception as EXC
import Erlang.Type
import Partial.Unsafe (unsafePartial)


erlps__message__1 :: ErlangFun
erlps__message__1 [t_0] =
  let arg_1 = erlps__message_1__1 [t_0]
  in BIF.erlang__binary_to_list__1 [arg_1]
erlps__message__1 [arg_3] = EXC.function_clause unit
erlps__message__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args

erlps__message_1__1 :: ErlangFun
erlps__message_1__1 [(ErlangAtom "e2big")] =
  let    bin_el_0 = toErl 97
  in let bin_el_1 = toErl 114
  in let bin_el_2 = toErl 103
  in let bin_el_3 = toErl 117
  in let bin_el_4 = toErl 109
  in let bin_el_5 = toErl 101
  in let bin_el_6 = toErl 110
  in let bin_el_7 = toErl 116
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 108
  in let bin_el_10 = toErl 105
  in let bin_el_11 = toErl 115
  in let bin_el_12 = toErl 116
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 116
  in let bin_el_15 = toErl 111
  in let bin_el_16 = toErl 111
  in let bin_el_17 = toErl 32
  in let bin_el_18 = toErl 108
  in let bin_el_19 = toErl 111
  in let bin_el_20 = toErl 110
  in let bin_el_21 = toErl 103
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eacces")] =
  let    bin_el_0 = toErl 112
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 114
  in let bin_el_3 = toErl 109
  in let bin_el_4 = toErl 105
  in let bin_el_5 = toErl 115
  in let bin_el_6 = toErl 115
  in let bin_el_7 = toErl 105
  in let bin_el_8 = toErl 111
  in let bin_el_9 = toErl 110
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 100
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 110
  in let bin_el_14 = toErl 105
  in let bin_el_15 = toErl 101
  in let bin_el_16 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eaddrinuse")] =
  let    bin_el_0 = toErl 97
  in let bin_el_1 = toErl 100
  in let bin_el_2 = toErl 100
  in let bin_el_3 = toErl 114
  in let bin_el_4 = toErl 101
  in let bin_el_5 = toErl 115
  in let bin_el_6 = toErl 115
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 97
  in let bin_el_9 = toErl 108
  in let bin_el_10 = toErl 114
  in let bin_el_11 = toErl 101
  in let bin_el_12 = toErl 97
  in let bin_el_13 = toErl 100
  in let bin_el_14 = toErl 121
  in let bin_el_15 = toErl 32
  in let bin_el_16 = toErl 105
  in let bin_el_17 = toErl 110
  in let bin_el_18 = toErl 32
  in let bin_el_19 = toErl 117
  in let bin_el_20 = toErl 115
  in let bin_el_21 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eaddrnotavail")] =
  let    bin_el_0 = toErl 99
  in let bin_el_1 = toErl 97
  in let bin_el_2 = toErl 110
  in let bin_el_3 = toErl 39
  in let bin_el_4 = toErl 116
  in let bin_el_5 = toErl 32
  in let bin_el_6 = toErl 97
  in let bin_el_7 = toErl 115
  in let bin_el_8 = toErl 115
  in let bin_el_9 = toErl 105
  in let bin_el_10 = toErl 103
  in let bin_el_11 = toErl 110
  in let bin_el_12 = toErl 32
  in let bin_el_13 = toErl 114
  in let bin_el_14 = toErl 101
  in let bin_el_15 = toErl 113
  in let bin_el_16 = toErl 117
  in let bin_el_17 = toErl 101
  in let bin_el_18 = toErl 115
  in let bin_el_19 = toErl 116
  in let bin_el_20 = toErl 101
  in let bin_el_21 = toErl 100
  in let bin_el_22 = toErl 32
  in let bin_el_23 = toErl 97
  in let bin_el_24 = toErl 100
  in let bin_el_25 = toErl 100
  in let bin_el_26 = toErl 114
  in let bin_el_27 = toErl 101
  in let bin_el_28 = toErl 115
  in let bin_el_29 = toErl 115
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eadv")] =
  let    bin_el_0 = toErl 97
  in let bin_el_1 = toErl 100
  in let bin_el_2 = toErl 118
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 114
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 105
  in let bin_el_7 = toErl 115
  in let bin_el_8 = toErl 101
  in let bin_el_9 = toErl 32
  in let bin_el_10 = toErl 101
  in let bin_el_11 = toErl 114
  in let bin_el_12 = toErl 114
  in let bin_el_13 = toErl 111
  in let bin_el_14 = toErl 114
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eafnosupport")] =
  let    bin_el_0 = toErl 97
  in let bin_el_1 = toErl 100
  in let bin_el_2 = toErl 100
  in let bin_el_3 = toErl 114
  in let bin_el_4 = toErl 101
  in let bin_el_5 = toErl 115
  in let bin_el_6 = toErl 115
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 102
  in let bin_el_9 = toErl 97
  in let bin_el_10 = toErl 109
  in let bin_el_11 = toErl 105
  in let bin_el_12 = toErl 108
  in let bin_el_13 = toErl 121
  in let bin_el_14 = toErl 32
  in let bin_el_15 = toErl 110
  in let bin_el_16 = toErl 111
  in let bin_el_17 = toErl 116
  in let bin_el_18 = toErl 32
  in let bin_el_19 = toErl 115
  in let bin_el_20 = toErl 117
  in let bin_el_21 = toErl 112
  in let bin_el_22 = toErl 112
  in let bin_el_23 = toErl 111
  in let bin_el_24 = toErl 114
  in let bin_el_25 = toErl 116
  in let bin_el_26 = toErl 101
  in let bin_el_27 = toErl 100
  in let bin_el_28 = toErl 32
  in let bin_el_29 = toErl 98
  in let bin_el_30 = toErl 121
  in let bin_el_31 = toErl 32
  in let bin_el_32 = toErl 112
  in let bin_el_33 = toErl 114
  in let bin_el_34 = toErl 111
  in let bin_el_35 = toErl 116
  in let bin_el_36 = toErl 111
  in let bin_el_37 = toErl 99
  in let bin_el_38 = toErl 111
  in let bin_el_39 = toErl 108
  in let bin_el_40 = toErl 32
  in let bin_el_41 = toErl 102
  in let bin_el_42 = toErl 97
  in let bin_el_43 = toErl 109
  in let bin_el_44 = toErl 105
  in let bin_el_45 = toErl 108
  in let bin_el_46 = toErl 121
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_30 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_31 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_32 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_33 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_34 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_35 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_36 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_37 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_38 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_39 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_40 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_41 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_42 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_43 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_44 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_45 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_46 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eagain")] =
  let    bin_el_0 = toErl 114
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 115
  in let bin_el_3 = toErl 111
  in let bin_el_4 = toErl 117
  in let bin_el_5 = toErl 114
  in let bin_el_6 = toErl 99
  in let bin_el_7 = toErl 101
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 116
  in let bin_el_10 = toErl 101
  in let bin_el_11 = toErl 109
  in let bin_el_12 = toErl 112
  in let bin_el_13 = toErl 111
  in let bin_el_14 = toErl 114
  in let bin_el_15 = toErl 97
  in let bin_el_16 = toErl 114
  in let bin_el_17 = toErl 105
  in let bin_el_18 = toErl 108
  in let bin_el_19 = toErl 121
  in let bin_el_20 = toErl 32
  in let bin_el_21 = toErl 117
  in let bin_el_22 = toErl 110
  in let bin_el_23 = toErl 97
  in let bin_el_24 = toErl 118
  in let bin_el_25 = toErl 97
  in let bin_el_26 = toErl 105
  in let bin_el_27 = toErl 108
  in let bin_el_28 = toErl 97
  in let bin_el_29 = toErl 98
  in let bin_el_30 = toErl 108
  in let bin_el_31 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_30 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_31 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "ealign")] =
  let    bin_el_0 = toErl 69
  in let bin_el_1 = toErl 65
  in let bin_el_2 = toErl 76
  in let bin_el_3 = toErl 73
  in let bin_el_4 = toErl 71
  in let bin_el_5 = toErl 78
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "ealready")] =
  let    bin_el_0 = toErl 111
  in let bin_el_1 = toErl 112
  in let bin_el_2 = toErl 101
  in let bin_el_3 = toErl 114
  in let bin_el_4 = toErl 97
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 105
  in let bin_el_7 = toErl 111
  in let bin_el_8 = toErl 110
  in let bin_el_9 = toErl 32
  in let bin_el_10 = toErl 97
  in let bin_el_11 = toErl 108
  in let bin_el_12 = toErl 114
  in let bin_el_13 = toErl 101
  in let bin_el_14 = toErl 97
  in let bin_el_15 = toErl 100
  in let bin_el_16 = toErl 121
  in let bin_el_17 = toErl 32
  in let bin_el_18 = toErl 105
  in let bin_el_19 = toErl 110
  in let bin_el_20 = toErl 32
  in let bin_el_21 = toErl 112
  in let bin_el_22 = toErl 114
  in let bin_el_23 = toErl 111
  in let bin_el_24 = toErl 103
  in let bin_el_25 = toErl 114
  in let bin_el_26 = toErl 101
  in let bin_el_27 = toErl 115
  in let bin_el_28 = toErl 115
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "ebade")] =
  let    bin_el_0 = toErl 98
  in let bin_el_1 = toErl 97
  in let bin_el_2 = toErl 100
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 101
  in let bin_el_5 = toErl 120
  in let bin_el_6 = toErl 99
  in let bin_el_7 = toErl 104
  in let bin_el_8 = toErl 97
  in let bin_el_9 = toErl 110
  in let bin_el_10 = toErl 103
  in let bin_el_11 = toErl 101
  in let bin_el_12 = toErl 32
  in let bin_el_13 = toErl 100
  in let bin_el_14 = toErl 101
  in let bin_el_15 = toErl 115
  in let bin_el_16 = toErl 99
  in let bin_el_17 = toErl 114
  in let bin_el_18 = toErl 105
  in let bin_el_19 = toErl 112
  in let bin_el_20 = toErl 116
  in let bin_el_21 = toErl 111
  in let bin_el_22 = toErl 114
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "ebadf")] =
  let    bin_el_0 = toErl 98
  in let bin_el_1 = toErl 97
  in let bin_el_2 = toErl 100
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 102
  in let bin_el_5 = toErl 105
  in let bin_el_6 = toErl 108
  in let bin_el_7 = toErl 101
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 110
  in let bin_el_10 = toErl 117
  in let bin_el_11 = toErl 109
  in let bin_el_12 = toErl 98
  in let bin_el_13 = toErl 101
  in let bin_el_14 = toErl 114
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "ebadfd")] =
  let    bin_el_0 = toErl 102
  in let bin_el_1 = toErl 105
  in let bin_el_2 = toErl 108
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 32
  in let bin_el_5 = toErl 100
  in let bin_el_6 = toErl 101
  in let bin_el_7 = toErl 115
  in let bin_el_8 = toErl 99
  in let bin_el_9 = toErl 114
  in let bin_el_10 = toErl 105
  in let bin_el_11 = toErl 112
  in let bin_el_12 = toErl 116
  in let bin_el_13 = toErl 111
  in let bin_el_14 = toErl 114
  in let bin_el_15 = toErl 32
  in let bin_el_16 = toErl 105
  in let bin_el_17 = toErl 110
  in let bin_el_18 = toErl 32
  in let bin_el_19 = toErl 98
  in let bin_el_20 = toErl 97
  in let bin_el_21 = toErl 100
  in let bin_el_22 = toErl 32
  in let bin_el_23 = toErl 115
  in let bin_el_24 = toErl 116
  in let bin_el_25 = toErl 97
  in let bin_el_26 = toErl 116
  in let bin_el_27 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "ebadmsg")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 116
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 97
  in let bin_el_5 = toErl 32
  in let bin_el_6 = toErl 100
  in let bin_el_7 = toErl 97
  in let bin_el_8 = toErl 116
  in let bin_el_9 = toErl 97
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 109
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 115
  in let bin_el_14 = toErl 115
  in let bin_el_15 = toErl 97
  in let bin_el_16 = toErl 103
  in let bin_el_17 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "ebadr")] =
  let    bin_el_0 = toErl 98
  in let bin_el_1 = toErl 97
  in let bin_el_2 = toErl 100
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 114
  in let bin_el_5 = toErl 101
  in let bin_el_6 = toErl 113
  in let bin_el_7 = toErl 117
  in let bin_el_8 = toErl 101
  in let bin_el_9 = toErl 115
  in let bin_el_10 = toErl 116
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 100
  in let bin_el_13 = toErl 101
  in let bin_el_14 = toErl 115
  in let bin_el_15 = toErl 99
  in let bin_el_16 = toErl 114
  in let bin_el_17 = toErl 105
  in let bin_el_18 = toErl 112
  in let bin_el_19 = toErl 116
  in let bin_el_20 = toErl 111
  in let bin_el_21 = toErl 114
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "ebadrpc")] =
  let    bin_el_0 = toErl 82
  in let bin_el_1 = toErl 80
  in let bin_el_2 = toErl 67
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 115
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 114
  in let bin_el_7 = toErl 117
  in let bin_el_8 = toErl 99
  in let bin_el_9 = toErl 116
  in let bin_el_10 = toErl 117
  in let bin_el_11 = toErl 114
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 105
  in let bin_el_15 = toErl 115
  in let bin_el_16 = toErl 32
  in let bin_el_17 = toErl 98
  in let bin_el_18 = toErl 97
  in let bin_el_19 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "ebadrqc")] =
  let    bin_el_0 = toErl 98
  in let bin_el_1 = toErl 97
  in let bin_el_2 = toErl 100
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 114
  in let bin_el_5 = toErl 101
  in let bin_el_6 = toErl 113
  in let bin_el_7 = toErl 117
  in let bin_el_8 = toErl 101
  in let bin_el_9 = toErl 115
  in let bin_el_10 = toErl 116
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 99
  in let bin_el_13 = toErl 111
  in let bin_el_14 = toErl 100
  in let bin_el_15 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "ebadslt")] =
  let    bin_el_0 = toErl 105
  in let bin_el_1 = toErl 110
  in let bin_el_2 = toErl 118
  in let bin_el_3 = toErl 97
  in let bin_el_4 = toErl 108
  in let bin_el_5 = toErl 105
  in let bin_el_6 = toErl 100
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 115
  in let bin_el_9 = toErl 108
  in let bin_el_10 = toErl 111
  in let bin_el_11 = toErl 116
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "ebfont")] =
  let    bin_el_0 = toErl 98
  in let bin_el_1 = toErl 97
  in let bin_el_2 = toErl 100
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 102
  in let bin_el_5 = toErl 111
  in let bin_el_6 = toErl 110
  in let bin_el_7 = toErl 116
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 102
  in let bin_el_10 = toErl 105
  in let bin_el_11 = toErl 108
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 102
  in let bin_el_15 = toErl 111
  in let bin_el_16 = toErl 114
  in let bin_el_17 = toErl 109
  in let bin_el_18 = toErl 97
  in let bin_el_19 = toErl 116
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "ebusy")] =
  let    bin_el_0 = toErl 102
  in let bin_el_1 = toErl 105
  in let bin_el_2 = toErl 108
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 32
  in let bin_el_5 = toErl 98
  in let bin_el_6 = toErl 117
  in let bin_el_7 = toErl 115
  in let bin_el_8 = toErl 121
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "echild")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 32
  in let bin_el_3 = toErl 99
  in let bin_el_4 = toErl 104
  in let bin_el_5 = toErl 105
  in let bin_el_6 = toErl 108
  in let bin_el_7 = toErl 100
  in let bin_el_8 = toErl 114
  in let bin_el_9 = toErl 101
  in let bin_el_10 = toErl 110
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "echrng")] =
  let    bin_el_0 = toErl 99
  in let bin_el_1 = toErl 104
  in let bin_el_2 = toErl 97
  in let bin_el_3 = toErl 110
  in let bin_el_4 = toErl 110
  in let bin_el_5 = toErl 101
  in let bin_el_6 = toErl 108
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 110
  in let bin_el_9 = toErl 117
  in let bin_el_10 = toErl 109
  in let bin_el_11 = toErl 98
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 114
  in let bin_el_14 = toErl 32
  in let bin_el_15 = toErl 111
  in let bin_el_16 = toErl 117
  in let bin_el_17 = toErl 116
  in let bin_el_18 = toErl 32
  in let bin_el_19 = toErl 111
  in let bin_el_20 = toErl 102
  in let bin_el_21 = toErl 32
  in let bin_el_22 = toErl 114
  in let bin_el_23 = toErl 97
  in let bin_el_24 = toErl 110
  in let bin_el_25 = toErl 103
  in let bin_el_26 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "ecomm")] =
  let    bin_el_0 = toErl 99
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 109
  in let bin_el_3 = toErl 109
  in let bin_el_4 = toErl 117
  in let bin_el_5 = toErl 110
  in let bin_el_6 = toErl 105
  in let bin_el_7 = toErl 99
  in let bin_el_8 = toErl 97
  in let bin_el_9 = toErl 116
  in let bin_el_10 = toErl 105
  in let bin_el_11 = toErl 111
  in let bin_el_12 = toErl 110
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 101
  in let bin_el_15 = toErl 114
  in let bin_el_16 = toErl 114
  in let bin_el_17 = toErl 111
  in let bin_el_18 = toErl 114
  in let bin_el_19 = toErl 32
  in let bin_el_20 = toErl 111
  in let bin_el_21 = toErl 110
  in let bin_el_22 = toErl 32
  in let bin_el_23 = toErl 115
  in let bin_el_24 = toErl 101
  in let bin_el_25 = toErl 110
  in let bin_el_26 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "econnaborted")] =
  let    bin_el_0 = toErl 115
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 102
  in let bin_el_3 = toErl 116
  in let bin_el_4 = toErl 119
  in let bin_el_5 = toErl 97
  in let bin_el_6 = toErl 114
  in let bin_el_7 = toErl 101
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 99
  in let bin_el_10 = toErl 97
  in let bin_el_11 = toErl 117
  in let bin_el_12 = toErl 115
  in let bin_el_13 = toErl 101
  in let bin_el_14 = toErl 100
  in let bin_el_15 = toErl 32
  in let bin_el_16 = toErl 99
  in let bin_el_17 = toErl 111
  in let bin_el_18 = toErl 110
  in let bin_el_19 = toErl 110
  in let bin_el_20 = toErl 101
  in let bin_el_21 = toErl 99
  in let bin_el_22 = toErl 116
  in let bin_el_23 = toErl 105
  in let bin_el_24 = toErl 111
  in let bin_el_25 = toErl 110
  in let bin_el_26 = toErl 32
  in let bin_el_27 = toErl 97
  in let bin_el_28 = toErl 98
  in let bin_el_29 = toErl 111
  in let bin_el_30 = toErl 114
  in let bin_el_31 = toErl 116
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_30 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_31 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "econnrefused")] =
  let    bin_el_0 = toErl 99
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 110
  in let bin_el_3 = toErl 110
  in let bin_el_4 = toErl 101
  in let bin_el_5 = toErl 99
  in let bin_el_6 = toErl 116
  in let bin_el_7 = toErl 105
  in let bin_el_8 = toErl 111
  in let bin_el_9 = toErl 110
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 114
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 102
  in let bin_el_14 = toErl 117
  in let bin_el_15 = toErl 115
  in let bin_el_16 = toErl 101
  in let bin_el_17 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "econnreset")] =
  let    bin_el_0 = toErl 99
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 110
  in let bin_el_3 = toErl 110
  in let bin_el_4 = toErl 101
  in let bin_el_5 = toErl 99
  in let bin_el_6 = toErl 116
  in let bin_el_7 = toErl 105
  in let bin_el_8 = toErl 111
  in let bin_el_9 = toErl 110
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 114
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 115
  in let bin_el_14 = toErl 101
  in let bin_el_15 = toErl 116
  in let bin_el_16 = toErl 32
  in let bin_el_17 = toErl 98
  in let bin_el_18 = toErl 121
  in let bin_el_19 = toErl 32
  in let bin_el_20 = toErl 112
  in let bin_el_21 = toErl 101
  in let bin_el_22 = toErl 101
  in let bin_el_23 = toErl 114
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "edeadlk")] =
  let    bin_el_0 = toErl 114
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 115
  in let bin_el_3 = toErl 111
  in let bin_el_4 = toErl 117
  in let bin_el_5 = toErl 114
  in let bin_el_6 = toErl 99
  in let bin_el_7 = toErl 101
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 100
  in let bin_el_10 = toErl 101
  in let bin_el_11 = toErl 97
  in let bin_el_12 = toErl 100
  in let bin_el_13 = toErl 108
  in let bin_el_14 = toErl 111
  in let bin_el_15 = toErl 99
  in let bin_el_16 = toErl 107
  in let bin_el_17 = toErl 32
  in let bin_el_18 = toErl 97
  in let bin_el_19 = toErl 118
  in let bin_el_20 = toErl 111
  in let bin_el_21 = toErl 105
  in let bin_el_22 = toErl 100
  in let bin_el_23 = toErl 101
  in let bin_el_24 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "edeadlock")] =
  let    bin_el_0 = toErl 114
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 115
  in let bin_el_3 = toErl 111
  in let bin_el_4 = toErl 117
  in let bin_el_5 = toErl 114
  in let bin_el_6 = toErl 99
  in let bin_el_7 = toErl 101
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 100
  in let bin_el_10 = toErl 101
  in let bin_el_11 = toErl 97
  in let bin_el_12 = toErl 100
  in let bin_el_13 = toErl 108
  in let bin_el_14 = toErl 111
  in let bin_el_15 = toErl 99
  in let bin_el_16 = toErl 107
  in let bin_el_17 = toErl 32
  in let bin_el_18 = toErl 97
  in let bin_el_19 = toErl 118
  in let bin_el_20 = toErl 111
  in let bin_el_21 = toErl 105
  in let bin_el_22 = toErl 100
  in let bin_el_23 = toErl 101
  in let bin_el_24 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "edestaddrreq")] =
  let    bin_el_0 = toErl 100
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 115
  in let bin_el_3 = toErl 116
  in let bin_el_4 = toErl 105
  in let bin_el_5 = toErl 110
  in let bin_el_6 = toErl 97
  in let bin_el_7 = toErl 116
  in let bin_el_8 = toErl 105
  in let bin_el_9 = toErl 111
  in let bin_el_10 = toErl 110
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 97
  in let bin_el_13 = toErl 100
  in let bin_el_14 = toErl 100
  in let bin_el_15 = toErl 114
  in let bin_el_16 = toErl 101
  in let bin_el_17 = toErl 115
  in let bin_el_18 = toErl 115
  in let bin_el_19 = toErl 32
  in let bin_el_20 = toErl 114
  in let bin_el_21 = toErl 101
  in let bin_el_22 = toErl 113
  in let bin_el_23 = toErl 117
  in let bin_el_24 = toErl 105
  in let bin_el_25 = toErl 114
  in let bin_el_26 = toErl 101
  in let bin_el_27 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "edirty")] =
  let    bin_el_0 = toErl 109
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 117
  in let bin_el_3 = toErl 110
  in let bin_el_4 = toErl 116
  in let bin_el_5 = toErl 105
  in let bin_el_6 = toErl 110
  in let bin_el_7 = toErl 103
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 97
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 100
  in let bin_el_12 = toErl 105
  in let bin_el_13 = toErl 114
  in let bin_el_14 = toErl 116
  in let bin_el_15 = toErl 121
  in let bin_el_16 = toErl 32
  in let bin_el_17 = toErl 102
  in let bin_el_18 = toErl 115
  in let bin_el_19 = toErl 32
  in let bin_el_20 = toErl 119
  in let bin_el_21 = toErl 47
  in let bin_el_22 = toErl 111
  in let bin_el_23 = toErl 32
  in let bin_el_24 = toErl 102
  in let bin_el_25 = toErl 111
  in let bin_el_26 = toErl 114
  in let bin_el_27 = toErl 99
  in let bin_el_28 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "edom")] =
  let    bin_el_0 = toErl 109
  in let bin_el_1 = toErl 97
  in let bin_el_2 = toErl 116
  in let bin_el_3 = toErl 104
  in let bin_el_4 = toErl 32
  in let bin_el_5 = toErl 97
  in let bin_el_6 = toErl 114
  in let bin_el_7 = toErl 103
  in let bin_el_8 = toErl 117
  in let bin_el_9 = toErl 109
  in let bin_el_10 = toErl 101
  in let bin_el_11 = toErl 110
  in let bin_el_12 = toErl 116
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 111
  in let bin_el_15 = toErl 117
  in let bin_el_16 = toErl 116
  in let bin_el_17 = toErl 32
  in let bin_el_18 = toErl 111
  in let bin_el_19 = toErl 102
  in let bin_el_20 = toErl 32
  in let bin_el_21 = toErl 114
  in let bin_el_22 = toErl 97
  in let bin_el_23 = toErl 110
  in let bin_el_24 = toErl 103
  in let bin_el_25 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "edotdot")] =
  let    bin_el_0 = toErl 99
  in let bin_el_1 = toErl 114
  in let bin_el_2 = toErl 111
  in let bin_el_3 = toErl 115
  in let bin_el_4 = toErl 115
  in let bin_el_5 = toErl 32
  in let bin_el_6 = toErl 109
  in let bin_el_7 = toErl 111
  in let bin_el_8 = toErl 117
  in let bin_el_9 = toErl 110
  in let bin_el_10 = toErl 116
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 112
  in let bin_el_13 = toErl 111
  in let bin_el_14 = toErl 105
  in let bin_el_15 = toErl 110
  in let bin_el_16 = toErl 116
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "edquot")] =
  let    bin_el_0 = toErl 100
  in let bin_el_1 = toErl 105
  in let bin_el_2 = toErl 115
  in let bin_el_3 = toErl 107
  in let bin_el_4 = toErl 32
  in let bin_el_5 = toErl 113
  in let bin_el_6 = toErl 117
  in let bin_el_7 = toErl 111
  in let bin_el_8 = toErl 116
  in let bin_el_9 = toErl 97
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 101
  in let bin_el_12 = toErl 120
  in let bin_el_13 = toErl 99
  in let bin_el_14 = toErl 101
  in let bin_el_15 = toErl 101
  in let bin_el_16 = toErl 100
  in let bin_el_17 = toErl 101
  in let bin_el_18 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eduppkg")] =
  let    bin_el_0 = toErl 100
  in let bin_el_1 = toErl 117
  in let bin_el_2 = toErl 112
  in let bin_el_3 = toErl 108
  in let bin_el_4 = toErl 105
  in let bin_el_5 = toErl 99
  in let bin_el_6 = toErl 97
  in let bin_el_7 = toErl 116
  in let bin_el_8 = toErl 101
  in let bin_el_9 = toErl 32
  in let bin_el_10 = toErl 112
  in let bin_el_11 = toErl 97
  in let bin_el_12 = toErl 99
  in let bin_el_13 = toErl 107
  in let bin_el_14 = toErl 97
  in let bin_el_15 = toErl 103
  in let bin_el_16 = toErl 101
  in let bin_el_17 = toErl 32
  in let bin_el_18 = toErl 110
  in let bin_el_19 = toErl 97
  in let bin_el_20 = toErl 109
  in let bin_el_21 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eexist")] =
  let    bin_el_0 = toErl 102
  in let bin_el_1 = toErl 105
  in let bin_el_2 = toErl 108
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 32
  in let bin_el_5 = toErl 97
  in let bin_el_6 = toErl 108
  in let bin_el_7 = toErl 114
  in let bin_el_8 = toErl 101
  in let bin_el_9 = toErl 97
  in let bin_el_10 = toErl 100
  in let bin_el_11 = toErl 121
  in let bin_el_12 = toErl 32
  in let bin_el_13 = toErl 101
  in let bin_el_14 = toErl 120
  in let bin_el_15 = toErl 105
  in let bin_el_16 = toErl 115
  in let bin_el_17 = toErl 116
  in let bin_el_18 = toErl 115
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "efault")] =
  let    bin_el_0 = toErl 98
  in let bin_el_1 = toErl 97
  in let bin_el_2 = toErl 100
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 97
  in let bin_el_5 = toErl 100
  in let bin_el_6 = toErl 100
  in let bin_el_7 = toErl 114
  in let bin_el_8 = toErl 101
  in let bin_el_9 = toErl 115
  in let bin_el_10 = toErl 115
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 105
  in let bin_el_13 = toErl 110
  in let bin_el_14 = toErl 32
  in let bin_el_15 = toErl 115
  in let bin_el_16 = toErl 121
  in let bin_el_17 = toErl 115
  in let bin_el_18 = toErl 116
  in let bin_el_19 = toErl 101
  in let bin_el_20 = toErl 109
  in let bin_el_21 = toErl 32
  in let bin_el_22 = toErl 99
  in let bin_el_23 = toErl 97
  in let bin_el_24 = toErl 108
  in let bin_el_25 = toErl 108
  in let bin_el_26 = toErl 32
  in let bin_el_27 = toErl 97
  in let bin_el_28 = toErl 114
  in let bin_el_29 = toErl 103
  in let bin_el_30 = toErl 117
  in let bin_el_31 = toErl 109
  in let bin_el_32 = toErl 101
  in let bin_el_33 = toErl 110
  in let bin_el_34 = toErl 116
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_30 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_31 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_32 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_33 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_34 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "efbig")] =
  let    bin_el_0 = toErl 102
  in let bin_el_1 = toErl 105
  in let bin_el_2 = toErl 108
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 32
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 111
  in let bin_el_7 = toErl 111
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 108
  in let bin_el_10 = toErl 97
  in let bin_el_11 = toErl 114
  in let bin_el_12 = toErl 103
  in let bin_el_13 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eftype")] =
  let    bin_el_0 = toErl 69
  in let bin_el_1 = toErl 70
  in let bin_el_2 = toErl 84
  in let bin_el_3 = toErl 89
  in let bin_el_4 = toErl 80
  in let bin_el_5 = toErl 69
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "ehostdown")] =
  let    bin_el_0 = toErl 104
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 115
  in let bin_el_3 = toErl 116
  in let bin_el_4 = toErl 32
  in let bin_el_5 = toErl 105
  in let bin_el_6 = toErl 115
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 100
  in let bin_el_9 = toErl 111
  in let bin_el_10 = toErl 119
  in let bin_el_11 = toErl 110
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "ehostunreach")] =
  let    bin_el_0 = toErl 104
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 115
  in let bin_el_3 = toErl 116
  in let bin_el_4 = toErl 32
  in let bin_el_5 = toErl 105
  in let bin_el_6 = toErl 115
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 117
  in let bin_el_9 = toErl 110
  in let bin_el_10 = toErl 114
  in let bin_el_11 = toErl 101
  in let bin_el_12 = toErl 97
  in let bin_el_13 = toErl 99
  in let bin_el_14 = toErl 104
  in let bin_el_15 = toErl 97
  in let bin_el_16 = toErl 98
  in let bin_el_17 = toErl 108
  in let bin_el_18 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eidrm")] =
  let    bin_el_0 = toErl 105
  in let bin_el_1 = toErl 100
  in let bin_el_2 = toErl 101
  in let bin_el_3 = toErl 110
  in let bin_el_4 = toErl 116
  in let bin_el_5 = toErl 105
  in let bin_el_6 = toErl 102
  in let bin_el_7 = toErl 105
  in let bin_el_8 = toErl 101
  in let bin_el_9 = toErl 114
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 114
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 109
  in let bin_el_14 = toErl 111
  in let bin_el_15 = toErl 118
  in let bin_el_16 = toErl 101
  in let bin_el_17 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "einit")] =
  let    bin_el_0 = toErl 105
  in let bin_el_1 = toErl 110
  in let bin_el_2 = toErl 105
  in let bin_el_3 = toErl 116
  in let bin_el_4 = toErl 105
  in let bin_el_5 = toErl 97
  in let bin_el_6 = toErl 108
  in let bin_el_7 = toErl 105
  in let bin_el_8 = toErl 122
  in let bin_el_9 = toErl 97
  in let bin_el_10 = toErl 116
  in let bin_el_11 = toErl 105
  in let bin_el_12 = toErl 111
  in let bin_el_13 = toErl 110
  in let bin_el_14 = toErl 32
  in let bin_el_15 = toErl 101
  in let bin_el_16 = toErl 114
  in let bin_el_17 = toErl 114
  in let bin_el_18 = toErl 111
  in let bin_el_19 = toErl 114
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "einprogress")] =
  let    bin_el_0 = toErl 111
  in let bin_el_1 = toErl 112
  in let bin_el_2 = toErl 101
  in let bin_el_3 = toErl 114
  in let bin_el_4 = toErl 97
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 105
  in let bin_el_7 = toErl 111
  in let bin_el_8 = toErl 110
  in let bin_el_9 = toErl 32
  in let bin_el_10 = toErl 110
  in let bin_el_11 = toErl 111
  in let bin_el_12 = toErl 119
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 105
  in let bin_el_15 = toErl 110
  in let bin_el_16 = toErl 32
  in let bin_el_17 = toErl 112
  in let bin_el_18 = toErl 114
  in let bin_el_19 = toErl 111
  in let bin_el_20 = toErl 103
  in let bin_el_21 = toErl 114
  in let bin_el_22 = toErl 101
  in let bin_el_23 = toErl 115
  in let bin_el_24 = toErl 115
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eintr")] =
  let    bin_el_0 = toErl 105
  in let bin_el_1 = toErl 110
  in let bin_el_2 = toErl 116
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 114
  in let bin_el_5 = toErl 114
  in let bin_el_6 = toErl 117
  in let bin_el_7 = toErl 112
  in let bin_el_8 = toErl 116
  in let bin_el_9 = toErl 101
  in let bin_el_10 = toErl 100
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 115
  in let bin_el_13 = toErl 121
  in let bin_el_14 = toErl 115
  in let bin_el_15 = toErl 116
  in let bin_el_16 = toErl 101
  in let bin_el_17 = toErl 109
  in let bin_el_18 = toErl 32
  in let bin_el_19 = toErl 99
  in let bin_el_20 = toErl 97
  in let bin_el_21 = toErl 108
  in let bin_el_22 = toErl 108
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "einval")] =
  let    bin_el_0 = toErl 105
  in let bin_el_1 = toErl 110
  in let bin_el_2 = toErl 118
  in let bin_el_3 = toErl 97
  in let bin_el_4 = toErl 108
  in let bin_el_5 = toErl 105
  in let bin_el_6 = toErl 100
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 97
  in let bin_el_9 = toErl 114
  in let bin_el_10 = toErl 103
  in let bin_el_11 = toErl 117
  in let bin_el_12 = toErl 109
  in let bin_el_13 = toErl 101
  in let bin_el_14 = toErl 110
  in let bin_el_15 = toErl 116
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eio")] =
  let    bin_el_0 = toErl 73
  in let bin_el_1 = toErl 47
  in let bin_el_2 = toErl 79
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 101
  in let bin_el_5 = toErl 114
  in let bin_el_6 = toErl 114
  in let bin_el_7 = toErl 111
  in let bin_el_8 = toErl 114
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eisconn")] =
  let    bin_el_0 = toErl 115
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 99
  in let bin_el_3 = toErl 107
  in let bin_el_4 = toErl 101
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 32
  in let bin_el_7 = toErl 105
  in let bin_el_8 = toErl 115
  in let bin_el_9 = toErl 32
  in let bin_el_10 = toErl 97
  in let bin_el_11 = toErl 108
  in let bin_el_12 = toErl 114
  in let bin_el_13 = toErl 101
  in let bin_el_14 = toErl 97
  in let bin_el_15 = toErl 100
  in let bin_el_16 = toErl 121
  in let bin_el_17 = toErl 32
  in let bin_el_18 = toErl 99
  in let bin_el_19 = toErl 111
  in let bin_el_20 = toErl 110
  in let bin_el_21 = toErl 110
  in let bin_el_22 = toErl 101
  in let bin_el_23 = toErl 99
  in let bin_el_24 = toErl 116
  in let bin_el_25 = toErl 101
  in let bin_el_26 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eisdir")] =
  let    bin_el_0 = toErl 105
  in let bin_el_1 = toErl 108
  in let bin_el_2 = toErl 108
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 103
  in let bin_el_5 = toErl 97
  in let bin_el_6 = toErl 108
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 111
  in let bin_el_9 = toErl 112
  in let bin_el_10 = toErl 101
  in let bin_el_11 = toErl 114
  in let bin_el_12 = toErl 97
  in let bin_el_13 = toErl 116
  in let bin_el_14 = toErl 105
  in let bin_el_15 = toErl 111
  in let bin_el_16 = toErl 110
  in let bin_el_17 = toErl 32
  in let bin_el_18 = toErl 111
  in let bin_el_19 = toErl 110
  in let bin_el_20 = toErl 32
  in let bin_el_21 = toErl 97
  in let bin_el_22 = toErl 32
  in let bin_el_23 = toErl 100
  in let bin_el_24 = toErl 105
  in let bin_el_25 = toErl 114
  in let bin_el_26 = toErl 101
  in let bin_el_27 = toErl 99
  in let bin_el_28 = toErl 116
  in let bin_el_29 = toErl 111
  in let bin_el_30 = toErl 114
  in let bin_el_31 = toErl 121
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_30 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_31 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eisnam")] =
  let    bin_el_0 = toErl 105
  in let bin_el_1 = toErl 115
  in let bin_el_2 = toErl 32
  in let bin_el_3 = toErl 97
  in let bin_el_4 = toErl 32
  in let bin_el_5 = toErl 110
  in let bin_el_6 = toErl 97
  in let bin_el_7 = toErl 109
  in let bin_el_8 = toErl 101
  in let bin_el_9 = toErl 32
  in let bin_el_10 = toErl 102
  in let bin_el_11 = toErl 105
  in let bin_el_12 = toErl 108
  in let bin_el_13 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "elbin")] =
  let    bin_el_0 = toErl 69
  in let bin_el_1 = toErl 76
  in let bin_el_2 = toErl 66
  in let bin_el_3 = toErl 73
  in let bin_el_4 = toErl 78
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "el2hlt")] =
  let    bin_el_0 = toErl 108
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 118
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 108
  in let bin_el_5 = toErl 32
  in let bin_el_6 = toErl 50
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 104
  in let bin_el_9 = toErl 97
  in let bin_el_10 = toErl 108
  in let bin_el_11 = toErl 116
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "el2nsync")] =
  let    bin_el_0 = toErl 108
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 118
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 108
  in let bin_el_5 = toErl 32
  in let bin_el_6 = toErl 50
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 110
  in let bin_el_9 = toErl 111
  in let bin_el_10 = toErl 116
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 115
  in let bin_el_13 = toErl 121
  in let bin_el_14 = toErl 110
  in let bin_el_15 = toErl 99
  in let bin_el_16 = toErl 104
  in let bin_el_17 = toErl 114
  in let bin_el_18 = toErl 111
  in let bin_el_19 = toErl 110
  in let bin_el_20 = toErl 105
  in let bin_el_21 = toErl 122
  in let bin_el_22 = toErl 101
  in let bin_el_23 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "el3hlt")] =
  let    bin_el_0 = toErl 108
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 118
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 108
  in let bin_el_5 = toErl 32
  in let bin_el_6 = toErl 51
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 104
  in let bin_el_9 = toErl 97
  in let bin_el_10 = toErl 108
  in let bin_el_11 = toErl 116
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "el3rst")] =
  let    bin_el_0 = toErl 108
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 118
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 108
  in let bin_el_5 = toErl 32
  in let bin_el_6 = toErl 51
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 114
  in let bin_el_9 = toErl 101
  in let bin_el_10 = toErl 115
  in let bin_el_11 = toErl 101
  in let bin_el_12 = toErl 116
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "elibacc")] =
  let    bin_el_0 = toErl 99
  in let bin_el_1 = toErl 97
  in let bin_el_2 = toErl 110
  in let bin_el_3 = toErl 110
  in let bin_el_4 = toErl 111
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 32
  in let bin_el_7 = toErl 97
  in let bin_el_8 = toErl 99
  in let bin_el_9 = toErl 99
  in let bin_el_10 = toErl 101
  in let bin_el_11 = toErl 115
  in let bin_el_12 = toErl 115
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 97
  in let bin_el_15 = toErl 32
  in let bin_el_16 = toErl 110
  in let bin_el_17 = toErl 101
  in let bin_el_18 = toErl 101
  in let bin_el_19 = toErl 100
  in let bin_el_20 = toErl 101
  in let bin_el_21 = toErl 100
  in let bin_el_22 = toErl 32
  in let bin_el_23 = toErl 115
  in let bin_el_24 = toErl 104
  in let bin_el_25 = toErl 97
  in let bin_el_26 = toErl 114
  in let bin_el_27 = toErl 101
  in let bin_el_28 = toErl 100
  in let bin_el_29 = toErl 32
  in let bin_el_30 = toErl 108
  in let bin_el_31 = toErl 105
  in let bin_el_32 = toErl 98
  in let bin_el_33 = toErl 114
  in let bin_el_34 = toErl 97
  in let bin_el_35 = toErl 114
  in let bin_el_36 = toErl 121
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_30 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_31 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_32 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_33 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_34 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_35 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_36 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "elibbad")] =
  let    bin_el_0 = toErl 97
  in let bin_el_1 = toErl 99
  in let bin_el_2 = toErl 99
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 115
  in let bin_el_5 = toErl 115
  in let bin_el_6 = toErl 105
  in let bin_el_7 = toErl 110
  in let bin_el_8 = toErl 103
  in let bin_el_9 = toErl 32
  in let bin_el_10 = toErl 97
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 99
  in let bin_el_13 = toErl 111
  in let bin_el_14 = toErl 114
  in let bin_el_15 = toErl 114
  in let bin_el_16 = toErl 117
  in let bin_el_17 = toErl 112
  in let bin_el_18 = toErl 116
  in let bin_el_19 = toErl 101
  in let bin_el_20 = toErl 100
  in let bin_el_21 = toErl 32
  in let bin_el_22 = toErl 115
  in let bin_el_23 = toErl 104
  in let bin_el_24 = toErl 97
  in let bin_el_25 = toErl 114
  in let bin_el_26 = toErl 101
  in let bin_el_27 = toErl 100
  in let bin_el_28 = toErl 32
  in let bin_el_29 = toErl 108
  in let bin_el_30 = toErl 105
  in let bin_el_31 = toErl 98
  in let bin_el_32 = toErl 114
  in let bin_el_33 = toErl 97
  in let bin_el_34 = toErl 114
  in let bin_el_35 = toErl 121
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_30 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_31 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_32 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_33 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_34 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_35 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "elibexec")] =
  let    bin_el_0 = toErl 99
  in let bin_el_1 = toErl 97
  in let bin_el_2 = toErl 110
  in let bin_el_3 = toErl 110
  in let bin_el_4 = toErl 111
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 32
  in let bin_el_7 = toErl 101
  in let bin_el_8 = toErl 120
  in let bin_el_9 = toErl 101
  in let bin_el_10 = toErl 99
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 97
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 115
  in let bin_el_15 = toErl 104
  in let bin_el_16 = toErl 97
  in let bin_el_17 = toErl 114
  in let bin_el_18 = toErl 101
  in let bin_el_19 = toErl 100
  in let bin_el_20 = toErl 32
  in let bin_el_21 = toErl 108
  in let bin_el_22 = toErl 105
  in let bin_el_23 = toErl 98
  in let bin_el_24 = toErl 114
  in let bin_el_25 = toErl 97
  in let bin_el_26 = toErl 114
  in let bin_el_27 = toErl 121
  in let bin_el_28 = toErl 32
  in let bin_el_29 = toErl 100
  in let bin_el_30 = toErl 105
  in let bin_el_31 = toErl 114
  in let bin_el_32 = toErl 101
  in let bin_el_33 = toErl 99
  in let bin_el_34 = toErl 116
  in let bin_el_35 = toErl 108
  in let bin_el_36 = toErl 121
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_30 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_31 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_32 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_33 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_34 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_35 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_36 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "elibmax")] =
  let    bin_el_0 = toErl 97
  in let bin_el_1 = toErl 116
  in let bin_el_2 = toErl 116
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 109
  in let bin_el_5 = toErl 112
  in let bin_el_6 = toErl 116
  in let bin_el_7 = toErl 105
  in let bin_el_8 = toErl 110
  in let bin_el_9 = toErl 103
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 116
  in let bin_el_12 = toErl 111
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 108
  in let bin_el_15 = toErl 105
  in let bin_el_16 = toErl 110
  in let bin_el_17 = toErl 107
  in let bin_el_18 = toErl 32
  in let bin_el_19 = toErl 105
  in let bin_el_20 = toErl 110
  in let bin_el_21 = toErl 32
  in let bin_el_22 = toErl 109
  in let bin_el_23 = toErl 111
  in let bin_el_24 = toErl 114
  in let bin_el_25 = toErl 101
  in let bin_el_26 = toErl 32
  in let bin_el_27 = toErl 115
  in let bin_el_28 = toErl 104
  in let bin_el_29 = toErl 97
  in let bin_el_30 = toErl 114
  in let bin_el_31 = toErl 101
  in let bin_el_32 = toErl 100
  in let bin_el_33 = toErl 32
  in let bin_el_34 = toErl 108
  in let bin_el_35 = toErl 105
  in let bin_el_36 = toErl 98
  in let bin_el_37 = toErl 114
  in let bin_el_38 = toErl 97
  in let bin_el_39 = toErl 114
  in let bin_el_40 = toErl 105
  in let bin_el_41 = toErl 101
  in let bin_el_42 = toErl 115
  in let bin_el_43 = toErl 32
  in let bin_el_44 = toErl 116
  in let bin_el_45 = toErl 104
  in let bin_el_46 = toErl 97
  in let bin_el_47 = toErl 110
  in let bin_el_48 = toErl 32
  in let bin_el_49 = toErl 115
  in let bin_el_50 = toErl 121
  in let bin_el_51 = toErl 115
  in let bin_el_52 = toErl 116
  in let bin_el_53 = toErl 101
  in let bin_el_54 = toErl 109
  in let bin_el_55 = toErl 32
  in let bin_el_56 = toErl 108
  in let bin_el_57 = toErl 105
  in let bin_el_58 = toErl 109
  in let bin_el_59 = toErl 105
  in let bin_el_60 = toErl 116
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_30 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_31 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_32 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_33 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_34 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_35 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_36 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_37 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_38 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_39 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_40 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_41 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_42 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_43 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_44 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_45 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_46 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_47 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_48 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_49 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_50 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_51 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_52 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_53 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_54 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_55 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_56 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_57 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_58 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_59 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_60 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "elibscn")] =
  let    bin_el_0 = toErl 46
  in let bin_el_1 = toErl 108
  in let bin_el_2 = toErl 105
  in let bin_el_3 = toErl 98
  in let bin_el_4 = toErl 32
  in let bin_el_5 = toErl 115
  in let bin_el_6 = toErl 101
  in let bin_el_7 = toErl 99
  in let bin_el_8 = toErl 116
  in let bin_el_9 = toErl 105
  in let bin_el_10 = toErl 111
  in let bin_el_11 = toErl 110
  in let bin_el_12 = toErl 32
  in let bin_el_13 = toErl 105
  in let bin_el_14 = toErl 110
  in let bin_el_15 = toErl 32
  in let bin_el_16 = toErl 97
  in let bin_el_17 = toErl 46
  in let bin_el_18 = toErl 111
  in let bin_el_19 = toErl 117
  in let bin_el_20 = toErl 116
  in let bin_el_21 = toErl 32
  in let bin_el_22 = toErl 99
  in let bin_el_23 = toErl 111
  in let bin_el_24 = toErl 114
  in let bin_el_25 = toErl 114
  in let bin_el_26 = toErl 117
  in let bin_el_27 = toErl 112
  in let bin_el_28 = toErl 116
  in let bin_el_29 = toErl 101
  in let bin_el_30 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_30 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "elnrng")] =
  let    bin_el_0 = toErl 108
  in let bin_el_1 = toErl 105
  in let bin_el_2 = toErl 110
  in let bin_el_3 = toErl 107
  in let bin_el_4 = toErl 32
  in let bin_el_5 = toErl 110
  in let bin_el_6 = toErl 117
  in let bin_el_7 = toErl 109
  in let bin_el_8 = toErl 98
  in let bin_el_9 = toErl 101
  in let bin_el_10 = toErl 114
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 111
  in let bin_el_13 = toErl 117
  in let bin_el_14 = toErl 116
  in let bin_el_15 = toErl 32
  in let bin_el_16 = toErl 111
  in let bin_el_17 = toErl 102
  in let bin_el_18 = toErl 32
  in let bin_el_19 = toErl 114
  in let bin_el_20 = toErl 97
  in let bin_el_21 = toErl 110
  in let bin_el_22 = toErl 103
  in let bin_el_23 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eloop")] =
  let    bin_el_0 = toErl 116
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 111
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 109
  in let bin_el_5 = toErl 97
  in let bin_el_6 = toErl 110
  in let bin_el_7 = toErl 121
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 108
  in let bin_el_10 = toErl 101
  in let bin_el_11 = toErl 118
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 108
  in let bin_el_14 = toErl 115
  in let bin_el_15 = toErl 32
  in let bin_el_16 = toErl 111
  in let bin_el_17 = toErl 102
  in let bin_el_18 = toErl 32
  in let bin_el_19 = toErl 115
  in let bin_el_20 = toErl 121
  in let bin_el_21 = toErl 109
  in let bin_el_22 = toErl 98
  in let bin_el_23 = toErl 111
  in let bin_el_24 = toErl 108
  in let bin_el_25 = toErl 105
  in let bin_el_26 = toErl 99
  in let bin_el_27 = toErl 32
  in let bin_el_28 = toErl 108
  in let bin_el_29 = toErl 105
  in let bin_el_30 = toErl 110
  in let bin_el_31 = toErl 107
  in let bin_el_32 = toErl 115
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_30 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_31 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_32 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "emfile")] =
  let    bin_el_0 = toErl 116
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 111
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 109
  in let bin_el_5 = toErl 97
  in let bin_el_6 = toErl 110
  in let bin_el_7 = toErl 121
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 111
  in let bin_el_10 = toErl 112
  in let bin_el_11 = toErl 101
  in let bin_el_12 = toErl 110
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 102
  in let bin_el_15 = toErl 105
  in let bin_el_16 = toErl 108
  in let bin_el_17 = toErl 101
  in let bin_el_18 = toErl 115
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "emlink")] =
  let    bin_el_0 = toErl 116
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 111
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 109
  in let bin_el_5 = toErl 97
  in let bin_el_6 = toErl 110
  in let bin_el_7 = toErl 121
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 108
  in let bin_el_10 = toErl 105
  in let bin_el_11 = toErl 110
  in let bin_el_12 = toErl 107
  in let bin_el_13 = toErl 115
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "emsgsize")] =
  let    bin_el_0 = toErl 109
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 115
  in let bin_el_3 = toErl 115
  in let bin_el_4 = toErl 97
  in let bin_el_5 = toErl 103
  in let bin_el_6 = toErl 101
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 116
  in let bin_el_9 = toErl 111
  in let bin_el_10 = toErl 111
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 108
  in let bin_el_13 = toErl 111
  in let bin_el_14 = toErl 110
  in let bin_el_15 = toErl 103
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "emultihop")] =
  let    bin_el_0 = toErl 109
  in let bin_el_1 = toErl 117
  in let bin_el_2 = toErl 108
  in let bin_el_3 = toErl 116
  in let bin_el_4 = toErl 105
  in let bin_el_5 = toErl 104
  in let bin_el_6 = toErl 111
  in let bin_el_7 = toErl 112
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 97
  in let bin_el_10 = toErl 116
  in let bin_el_11 = toErl 116
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 109
  in let bin_el_14 = toErl 112
  in let bin_el_15 = toErl 116
  in let bin_el_16 = toErl 101
  in let bin_el_17 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enametoolong")] =
  let    bin_el_0 = toErl 102
  in let bin_el_1 = toErl 105
  in let bin_el_2 = toErl 108
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 32
  in let bin_el_5 = toErl 110
  in let bin_el_6 = toErl 97
  in let bin_el_7 = toErl 109
  in let bin_el_8 = toErl 101
  in let bin_el_9 = toErl 32
  in let bin_el_10 = toErl 116
  in let bin_el_11 = toErl 111
  in let bin_el_12 = toErl 111
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 108
  in let bin_el_15 = toErl 111
  in let bin_el_16 = toErl 110
  in let bin_el_17 = toErl 103
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enavail")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 116
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 97
  in let bin_el_5 = toErl 118
  in let bin_el_6 = toErl 97
  in let bin_el_7 = toErl 105
  in let bin_el_8 = toErl 108
  in let bin_el_9 = toErl 97
  in let bin_el_10 = toErl 98
  in let bin_el_11 = toErl 108
  in let bin_el_12 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enet")] =
  let    bin_el_0 = toErl 69
  in let bin_el_1 = toErl 78
  in let bin_el_2 = toErl 69
  in let bin_el_3 = toErl 84
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enetdown")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 116
  in let bin_el_3 = toErl 119
  in let bin_el_4 = toErl 111
  in let bin_el_5 = toErl 114
  in let bin_el_6 = toErl 107
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 105
  in let bin_el_9 = toErl 115
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 100
  in let bin_el_12 = toErl 111
  in let bin_el_13 = toErl 119
  in let bin_el_14 = toErl 110
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enetreset")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 116
  in let bin_el_3 = toErl 119
  in let bin_el_4 = toErl 111
  in let bin_el_5 = toErl 114
  in let bin_el_6 = toErl 107
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 100
  in let bin_el_9 = toErl 114
  in let bin_el_10 = toErl 111
  in let bin_el_11 = toErl 112
  in let bin_el_12 = toErl 112
  in let bin_el_13 = toErl 101
  in let bin_el_14 = toErl 100
  in let bin_el_15 = toErl 32
  in let bin_el_16 = toErl 99
  in let bin_el_17 = toErl 111
  in let bin_el_18 = toErl 110
  in let bin_el_19 = toErl 110
  in let bin_el_20 = toErl 101
  in let bin_el_21 = toErl 99
  in let bin_el_22 = toErl 116
  in let bin_el_23 = toErl 105
  in let bin_el_24 = toErl 111
  in let bin_el_25 = toErl 110
  in let bin_el_26 = toErl 32
  in let bin_el_27 = toErl 111
  in let bin_el_28 = toErl 110
  in let bin_el_29 = toErl 32
  in let bin_el_30 = toErl 114
  in let bin_el_31 = toErl 101
  in let bin_el_32 = toErl 115
  in let bin_el_33 = toErl 101
  in let bin_el_34 = toErl 116
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_30 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_31 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_32 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_33 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_34 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enetunreach")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 116
  in let bin_el_3 = toErl 119
  in let bin_el_4 = toErl 111
  in let bin_el_5 = toErl 114
  in let bin_el_6 = toErl 107
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 105
  in let bin_el_9 = toErl 115
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 117
  in let bin_el_12 = toErl 110
  in let bin_el_13 = toErl 114
  in let bin_el_14 = toErl 101
  in let bin_el_15 = toErl 97
  in let bin_el_16 = toErl 99
  in let bin_el_17 = toErl 104
  in let bin_el_18 = toErl 97
  in let bin_el_19 = toErl 98
  in let bin_el_20 = toErl 108
  in let bin_el_21 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enfile")] =
  let    bin_el_0 = toErl 102
  in let bin_el_1 = toErl 105
  in let bin_el_2 = toErl 108
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 32
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 97
  in let bin_el_7 = toErl 98
  in let bin_el_8 = toErl 108
  in let bin_el_9 = toErl 101
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 111
  in let bin_el_12 = toErl 118
  in let bin_el_13 = toErl 101
  in let bin_el_14 = toErl 114
  in let bin_el_15 = toErl 102
  in let bin_el_16 = toErl 108
  in let bin_el_17 = toErl 111
  in let bin_el_18 = toErl 119
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enoano")] =
  let    bin_el_0 = toErl 97
  in let bin_el_1 = toErl 110
  in let bin_el_2 = toErl 111
  in let bin_el_3 = toErl 100
  in let bin_el_4 = toErl 101
  in let bin_el_5 = toErl 32
  in let bin_el_6 = toErl 116
  in let bin_el_7 = toErl 97
  in let bin_el_8 = toErl 98
  in let bin_el_9 = toErl 108
  in let bin_el_10 = toErl 101
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 111
  in let bin_el_13 = toErl 118
  in let bin_el_14 = toErl 101
  in let bin_el_15 = toErl 114
  in let bin_el_16 = toErl 102
  in let bin_el_17 = toErl 108
  in let bin_el_18 = toErl 111
  in let bin_el_19 = toErl 119
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enobufs")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 32
  in let bin_el_3 = toErl 98
  in let bin_el_4 = toErl 117
  in let bin_el_5 = toErl 102
  in let bin_el_6 = toErl 102
  in let bin_el_7 = toErl 101
  in let bin_el_8 = toErl 114
  in let bin_el_9 = toErl 32
  in let bin_el_10 = toErl 115
  in let bin_el_11 = toErl 112
  in let bin_el_12 = toErl 97
  in let bin_el_13 = toErl 99
  in let bin_el_14 = toErl 101
  in let bin_el_15 = toErl 32
  in let bin_el_16 = toErl 97
  in let bin_el_17 = toErl 118
  in let bin_el_18 = toErl 97
  in let bin_el_19 = toErl 105
  in let bin_el_20 = toErl 108
  in let bin_el_21 = toErl 97
  in let bin_el_22 = toErl 98
  in let bin_el_23 = toErl 108
  in let bin_el_24 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enocsi")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 32
  in let bin_el_3 = toErl 67
  in let bin_el_4 = toErl 83
  in let bin_el_5 = toErl 73
  in let bin_el_6 = toErl 32
  in let bin_el_7 = toErl 115
  in let bin_el_8 = toErl 116
  in let bin_el_9 = toErl 114
  in let bin_el_10 = toErl 117
  in let bin_el_11 = toErl 99
  in let bin_el_12 = toErl 116
  in let bin_el_13 = toErl 117
  in let bin_el_14 = toErl 114
  in let bin_el_15 = toErl 101
  in let bin_el_16 = toErl 32
  in let bin_el_17 = toErl 97
  in let bin_el_18 = toErl 118
  in let bin_el_19 = toErl 97
  in let bin_el_20 = toErl 105
  in let bin_el_21 = toErl 108
  in let bin_el_22 = toErl 97
  in let bin_el_23 = toErl 98
  in let bin_el_24 = toErl 108
  in let bin_el_25 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enodata")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 32
  in let bin_el_3 = toErl 100
  in let bin_el_4 = toErl 97
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 97
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 97
  in let bin_el_9 = toErl 118
  in let bin_el_10 = toErl 97
  in let bin_el_11 = toErl 105
  in let bin_el_12 = toErl 108
  in let bin_el_13 = toErl 97
  in let bin_el_14 = toErl 98
  in let bin_el_15 = toErl 108
  in let bin_el_16 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enodev")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 32
  in let bin_el_3 = toErl 115
  in let bin_el_4 = toErl 117
  in let bin_el_5 = toErl 99
  in let bin_el_6 = toErl 104
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 100
  in let bin_el_9 = toErl 101
  in let bin_el_10 = toErl 118
  in let bin_el_11 = toErl 105
  in let bin_el_12 = toErl 99
  in let bin_el_13 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enoent")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 32
  in let bin_el_3 = toErl 115
  in let bin_el_4 = toErl 117
  in let bin_el_5 = toErl 99
  in let bin_el_6 = toErl 104
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 102
  in let bin_el_9 = toErl 105
  in let bin_el_10 = toErl 108
  in let bin_el_11 = toErl 101
  in let bin_el_12 = toErl 32
  in let bin_el_13 = toErl 111
  in let bin_el_14 = toErl 114
  in let bin_el_15 = toErl 32
  in let bin_el_16 = toErl 100
  in let bin_el_17 = toErl 105
  in let bin_el_18 = toErl 114
  in let bin_el_19 = toErl 101
  in let bin_el_20 = toErl 99
  in let bin_el_21 = toErl 116
  in let bin_el_22 = toErl 111
  in let bin_el_23 = toErl 114
  in let bin_el_24 = toErl 121
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enoexec")] =
  let    bin_el_0 = toErl 101
  in let bin_el_1 = toErl 120
  in let bin_el_2 = toErl 101
  in let bin_el_3 = toErl 99
  in let bin_el_4 = toErl 32
  in let bin_el_5 = toErl 102
  in let bin_el_6 = toErl 111
  in let bin_el_7 = toErl 114
  in let bin_el_8 = toErl 109
  in let bin_el_9 = toErl 97
  in let bin_el_10 = toErl 116
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 114
  in let bin_el_14 = toErl 114
  in let bin_el_15 = toErl 111
  in let bin_el_16 = toErl 114
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enolck")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 32
  in let bin_el_3 = toErl 108
  in let bin_el_4 = toErl 111
  in let bin_el_5 = toErl 99
  in let bin_el_6 = toErl 107
  in let bin_el_7 = toErl 115
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 97
  in let bin_el_10 = toErl 118
  in let bin_el_11 = toErl 97
  in let bin_el_12 = toErl 105
  in let bin_el_13 = toErl 108
  in let bin_el_14 = toErl 97
  in let bin_el_15 = toErl 98
  in let bin_el_16 = toErl 108
  in let bin_el_17 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enolink")] =
  let    bin_el_0 = toErl 108
  in let bin_el_1 = toErl 105
  in let bin_el_2 = toErl 110
  in let bin_el_3 = toErl 107
  in let bin_el_4 = toErl 32
  in let bin_el_5 = toErl 104
  in let bin_el_6 = toErl 97
  in let bin_el_7 = toErl 115
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 98
  in let bin_el_10 = toErl 101
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 115
  in let bin_el_13 = toErl 101
  in let bin_el_14 = toErl 118
  in let bin_el_15 = toErl 101
  in let bin_el_16 = toErl 114
  in let bin_el_17 = toErl 101
  in let bin_el_18 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enomem")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 116
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 101
  in let bin_el_5 = toErl 110
  in let bin_el_6 = toErl 111
  in let bin_el_7 = toErl 117
  in let bin_el_8 = toErl 103
  in let bin_el_9 = toErl 104
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 109
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 109
  in let bin_el_14 = toErl 111
  in let bin_el_15 = toErl 114
  in let bin_el_16 = toErl 121
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enomsg")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 32
  in let bin_el_3 = toErl 109
  in let bin_el_4 = toErl 101
  in let bin_el_5 = toErl 115
  in let bin_el_6 = toErl 115
  in let bin_el_7 = toErl 97
  in let bin_el_8 = toErl 103
  in let bin_el_9 = toErl 101
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 111
  in let bin_el_12 = toErl 102
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 100
  in let bin_el_15 = toErl 101
  in let bin_el_16 = toErl 115
  in let bin_el_17 = toErl 105
  in let bin_el_18 = toErl 114
  in let bin_el_19 = toErl 101
  in let bin_el_20 = toErl 100
  in let bin_el_21 = toErl 32
  in let bin_el_22 = toErl 116
  in let bin_el_23 = toErl 121
  in let bin_el_24 = toErl 112
  in let bin_el_25 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enonet")] =
  let    bin_el_0 = toErl 109
  in let bin_el_1 = toErl 97
  in let bin_el_2 = toErl 99
  in let bin_el_3 = toErl 104
  in let bin_el_4 = toErl 105
  in let bin_el_5 = toErl 110
  in let bin_el_6 = toErl 101
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 105
  in let bin_el_9 = toErl 115
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 110
  in let bin_el_12 = toErl 111
  in let bin_el_13 = toErl 116
  in let bin_el_14 = toErl 32
  in let bin_el_15 = toErl 111
  in let bin_el_16 = toErl 110
  in let bin_el_17 = toErl 32
  in let bin_el_18 = toErl 116
  in let bin_el_19 = toErl 104
  in let bin_el_20 = toErl 101
  in let bin_el_21 = toErl 32
  in let bin_el_22 = toErl 110
  in let bin_el_23 = toErl 101
  in let bin_el_24 = toErl 116
  in let bin_el_25 = toErl 119
  in let bin_el_26 = toErl 111
  in let bin_el_27 = toErl 114
  in let bin_el_28 = toErl 107
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enopkg")] =
  let    bin_el_0 = toErl 112
  in let bin_el_1 = toErl 97
  in let bin_el_2 = toErl 99
  in let bin_el_3 = toErl 107
  in let bin_el_4 = toErl 97
  in let bin_el_5 = toErl 103
  in let bin_el_6 = toErl 101
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 110
  in let bin_el_9 = toErl 111
  in let bin_el_10 = toErl 116
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 105
  in let bin_el_13 = toErl 110
  in let bin_el_14 = toErl 115
  in let bin_el_15 = toErl 116
  in let bin_el_16 = toErl 97
  in let bin_el_17 = toErl 108
  in let bin_el_18 = toErl 108
  in let bin_el_19 = toErl 101
  in let bin_el_20 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enoprotoopt")] =
  let    bin_el_0 = toErl 98
  in let bin_el_1 = toErl 97
  in let bin_el_2 = toErl 100
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 112
  in let bin_el_5 = toErl 114
  in let bin_el_6 = toErl 111
  in let bin_el_7 = toErl 111
  in let bin_el_8 = toErl 99
  in let bin_el_9 = toErl 111
  in let bin_el_10 = toErl 108
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 111
  in let bin_el_13 = toErl 112
  in let bin_el_14 = toErl 116
  in let bin_el_15 = toErl 105
  in let bin_el_16 = toErl 111
  in let bin_el_17 = toErl 110
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enospc")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 32
  in let bin_el_3 = toErl 115
  in let bin_el_4 = toErl 112
  in let bin_el_5 = toErl 97
  in let bin_el_6 = toErl 99
  in let bin_el_7 = toErl 101
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 108
  in let bin_el_10 = toErl 101
  in let bin_el_11 = toErl 102
  in let bin_el_12 = toErl 116
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 111
  in let bin_el_15 = toErl 110
  in let bin_el_16 = toErl 32
  in let bin_el_17 = toErl 100
  in let bin_el_18 = toErl 101
  in let bin_el_19 = toErl 118
  in let bin_el_20 = toErl 105
  in let bin_el_21 = toErl 99
  in let bin_el_22 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enosr")] =
  let    bin_el_0 = toErl 111
  in let bin_el_1 = toErl 117
  in let bin_el_2 = toErl 116
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 111
  in let bin_el_5 = toErl 102
  in let bin_el_6 = toErl 32
  in let bin_el_7 = toErl 115
  in let bin_el_8 = toErl 116
  in let bin_el_9 = toErl 114
  in let bin_el_10 = toErl 101
  in let bin_el_11 = toErl 97
  in let bin_el_12 = toErl 109
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 114
  in let bin_el_15 = toErl 101
  in let bin_el_16 = toErl 115
  in let bin_el_17 = toErl 111
  in let bin_el_18 = toErl 117
  in let bin_el_19 = toErl 114
  in let bin_el_20 = toErl 99
  in let bin_el_21 = toErl 101
  in let bin_el_22 = toErl 115
  in let bin_el_23 = toErl 32
  in let bin_el_24 = toErl 111
  in let bin_el_25 = toErl 114
  in let bin_el_26 = toErl 32
  in let bin_el_27 = toErl 110
  in let bin_el_28 = toErl 111
  in let bin_el_29 = toErl 116
  in let bin_el_30 = toErl 32
  in let bin_el_31 = toErl 97
  in let bin_el_32 = toErl 32
  in let bin_el_33 = toErl 115
  in let bin_el_34 = toErl 116
  in let bin_el_35 = toErl 114
  in let bin_el_36 = toErl 101
  in let bin_el_37 = toErl 97
  in let bin_el_38 = toErl 109
  in let bin_el_39 = toErl 32
  in let bin_el_40 = toErl 100
  in let bin_el_41 = toErl 101
  in let bin_el_42 = toErl 118
  in let bin_el_43 = toErl 105
  in let bin_el_44 = toErl 99
  in let bin_el_45 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_30 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_31 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_32 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_33 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_34 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_35 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_36 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_37 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_38 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_39 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_40 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_41 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_42 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_43 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_44 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_45 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enostr")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 116
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 97
  in let bin_el_5 = toErl 32
  in let bin_el_6 = toErl 115
  in let bin_el_7 = toErl 116
  in let bin_el_8 = toErl 114
  in let bin_el_9 = toErl 101
  in let bin_el_10 = toErl 97
  in let bin_el_11 = toErl 109
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enosym")] =
  let    bin_el_0 = toErl 117
  in let bin_el_1 = toErl 110
  in let bin_el_2 = toErl 114
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 115
  in let bin_el_5 = toErl 111
  in let bin_el_6 = toErl 108
  in let bin_el_7 = toErl 118
  in let bin_el_8 = toErl 101
  in let bin_el_9 = toErl 100
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 115
  in let bin_el_12 = toErl 121
  in let bin_el_13 = toErl 109
  in let bin_el_14 = toErl 98
  in let bin_el_15 = toErl 111
  in let bin_el_16 = toErl 108
  in let bin_el_17 = toErl 32
  in let bin_el_18 = toErl 110
  in let bin_el_19 = toErl 97
  in let bin_el_20 = toErl 109
  in let bin_el_21 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enosys")] =
  let    bin_el_0 = toErl 102
  in let bin_el_1 = toErl 117
  in let bin_el_2 = toErl 110
  in let bin_el_3 = toErl 99
  in let bin_el_4 = toErl 116
  in let bin_el_5 = toErl 105
  in let bin_el_6 = toErl 111
  in let bin_el_7 = toErl 110
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 110
  in let bin_el_10 = toErl 111
  in let bin_el_11 = toErl 116
  in let bin_el_12 = toErl 32
  in let bin_el_13 = toErl 105
  in let bin_el_14 = toErl 109
  in let bin_el_15 = toErl 112
  in let bin_el_16 = toErl 108
  in let bin_el_17 = toErl 101
  in let bin_el_18 = toErl 109
  in let bin_el_19 = toErl 101
  in let bin_el_20 = toErl 110
  in let bin_el_21 = toErl 116
  in let bin_el_22 = toErl 101
  in let bin_el_23 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enotblk")] =
  let    bin_el_0 = toErl 98
  in let bin_el_1 = toErl 108
  in let bin_el_2 = toErl 111
  in let bin_el_3 = toErl 99
  in let bin_el_4 = toErl 107
  in let bin_el_5 = toErl 32
  in let bin_el_6 = toErl 100
  in let bin_el_7 = toErl 101
  in let bin_el_8 = toErl 118
  in let bin_el_9 = toErl 105
  in let bin_el_10 = toErl 99
  in let bin_el_11 = toErl 101
  in let bin_el_12 = toErl 32
  in let bin_el_13 = toErl 114
  in let bin_el_14 = toErl 101
  in let bin_el_15 = toErl 113
  in let bin_el_16 = toErl 117
  in let bin_el_17 = toErl 105
  in let bin_el_18 = toErl 114
  in let bin_el_19 = toErl 101
  in let bin_el_20 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enotconn")] =
  let    bin_el_0 = toErl 115
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 99
  in let bin_el_3 = toErl 107
  in let bin_el_4 = toErl 101
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 32
  in let bin_el_7 = toErl 105
  in let bin_el_8 = toErl 115
  in let bin_el_9 = toErl 32
  in let bin_el_10 = toErl 110
  in let bin_el_11 = toErl 111
  in let bin_el_12 = toErl 116
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 99
  in let bin_el_15 = toErl 111
  in let bin_el_16 = toErl 110
  in let bin_el_17 = toErl 110
  in let bin_el_18 = toErl 101
  in let bin_el_19 = toErl 99
  in let bin_el_20 = toErl 116
  in let bin_el_21 = toErl 101
  in let bin_el_22 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enotdir")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 116
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 97
  in let bin_el_5 = toErl 32
  in let bin_el_6 = toErl 100
  in let bin_el_7 = toErl 105
  in let bin_el_8 = toErl 114
  in let bin_el_9 = toErl 101
  in let bin_el_10 = toErl 99
  in let bin_el_11 = toErl 116
  in let bin_el_12 = toErl 111
  in let bin_el_13 = toErl 114
  in let bin_el_14 = toErl 121
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enotempty")] =
  let    bin_el_0 = toErl 100
  in let bin_el_1 = toErl 105
  in let bin_el_2 = toErl 114
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 99
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 111
  in let bin_el_7 = toErl 114
  in let bin_el_8 = toErl 121
  in let bin_el_9 = toErl 32
  in let bin_el_10 = toErl 110
  in let bin_el_11 = toErl 111
  in let bin_el_12 = toErl 116
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 101
  in let bin_el_15 = toErl 109
  in let bin_el_16 = toErl 112
  in let bin_el_17 = toErl 116
  in let bin_el_18 = toErl 121
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enotnam")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 116
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 97
  in let bin_el_5 = toErl 32
  in let bin_el_6 = toErl 110
  in let bin_el_7 = toErl 97
  in let bin_el_8 = toErl 109
  in let bin_el_9 = toErl 101
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 102
  in let bin_el_12 = toErl 105
  in let bin_el_13 = toErl 108
  in let bin_el_14 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enotsock")] =
  let    bin_el_0 = toErl 115
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 99
  in let bin_el_3 = toErl 107
  in let bin_el_4 = toErl 101
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 32
  in let bin_el_7 = toErl 111
  in let bin_el_8 = toErl 112
  in let bin_el_9 = toErl 101
  in let bin_el_10 = toErl 114
  in let bin_el_11 = toErl 97
  in let bin_el_12 = toErl 116
  in let bin_el_13 = toErl 105
  in let bin_el_14 = toErl 111
  in let bin_el_15 = toErl 110
  in let bin_el_16 = toErl 32
  in let bin_el_17 = toErl 111
  in let bin_el_18 = toErl 110
  in let bin_el_19 = toErl 32
  in let bin_el_20 = toErl 110
  in let bin_el_21 = toErl 111
  in let bin_el_22 = toErl 110
  in let bin_el_23 = toErl 45
  in let bin_el_24 = toErl 115
  in let bin_el_25 = toErl 111
  in let bin_el_26 = toErl 99
  in let bin_el_27 = toErl 107
  in let bin_el_28 = toErl 101
  in let bin_el_29 = toErl 116
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enotsup")] =
  let    bin_el_0 = toErl 111
  in let bin_el_1 = toErl 112
  in let bin_el_2 = toErl 101
  in let bin_el_3 = toErl 114
  in let bin_el_4 = toErl 97
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 105
  in let bin_el_7 = toErl 111
  in let bin_el_8 = toErl 110
  in let bin_el_9 = toErl 32
  in let bin_el_10 = toErl 110
  in let bin_el_11 = toErl 111
  in let bin_el_12 = toErl 116
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 115
  in let bin_el_15 = toErl 117
  in let bin_el_16 = toErl 112
  in let bin_el_17 = toErl 112
  in let bin_el_18 = toErl 111
  in let bin_el_19 = toErl 114
  in let bin_el_20 = toErl 116
  in let bin_el_21 = toErl 101
  in let bin_el_22 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enotty")] =
  let    bin_el_0 = toErl 105
  in let bin_el_1 = toErl 110
  in let bin_el_2 = toErl 97
  in let bin_el_3 = toErl 112
  in let bin_el_4 = toErl 112
  in let bin_el_5 = toErl 114
  in let bin_el_6 = toErl 111
  in let bin_el_7 = toErl 112
  in let bin_el_8 = toErl 114
  in let bin_el_9 = toErl 105
  in let bin_el_10 = toErl 97
  in let bin_el_11 = toErl 116
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 100
  in let bin_el_15 = toErl 101
  in let bin_el_16 = toErl 118
  in let bin_el_17 = toErl 105
  in let bin_el_18 = toErl 99
  in let bin_el_19 = toErl 101
  in let bin_el_20 = toErl 32
  in let bin_el_21 = toErl 102
  in let bin_el_22 = toErl 111
  in let bin_el_23 = toErl 114
  in let bin_el_24 = toErl 32
  in let bin_el_25 = toErl 105
  in let bin_el_26 = toErl 111
  in let bin_el_27 = toErl 99
  in let bin_el_28 = toErl 116
  in let bin_el_29 = toErl 108
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enotuniq")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 97
  in let bin_el_2 = toErl 109
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 32
  in let bin_el_5 = toErl 110
  in let bin_el_6 = toErl 111
  in let bin_el_7 = toErl 116
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 117
  in let bin_el_10 = toErl 110
  in let bin_el_11 = toErl 105
  in let bin_el_12 = toErl 113
  in let bin_el_13 = toErl 117
  in let bin_el_14 = toErl 101
  in let bin_el_15 = toErl 32
  in let bin_el_16 = toErl 111
  in let bin_el_17 = toErl 110
  in let bin_el_18 = toErl 32
  in let bin_el_19 = toErl 110
  in let bin_el_20 = toErl 101
  in let bin_el_21 = toErl 116
  in let bin_el_22 = toErl 119
  in let bin_el_23 = toErl 111
  in let bin_el_24 = toErl 114
  in let bin_el_25 = toErl 107
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "enxio")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 32
  in let bin_el_3 = toErl 115
  in let bin_el_4 = toErl 117
  in let bin_el_5 = toErl 99
  in let bin_el_6 = toErl 104
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 100
  in let bin_el_9 = toErl 101
  in let bin_el_10 = toErl 118
  in let bin_el_11 = toErl 105
  in let bin_el_12 = toErl 99
  in let bin_el_13 = toErl 101
  in let bin_el_14 = toErl 32
  in let bin_el_15 = toErl 111
  in let bin_el_16 = toErl 114
  in let bin_el_17 = toErl 32
  in let bin_el_18 = toErl 97
  in let bin_el_19 = toErl 100
  in let bin_el_20 = toErl 100
  in let bin_el_21 = toErl 114
  in let bin_el_22 = toErl 101
  in let bin_el_23 = toErl 115
  in let bin_el_24 = toErl 115
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eopnotsupp")] =
  let    bin_el_0 = toErl 111
  in let bin_el_1 = toErl 112
  in let bin_el_2 = toErl 101
  in let bin_el_3 = toErl 114
  in let bin_el_4 = toErl 97
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 105
  in let bin_el_7 = toErl 111
  in let bin_el_8 = toErl 110
  in let bin_el_9 = toErl 32
  in let bin_el_10 = toErl 110
  in let bin_el_11 = toErl 111
  in let bin_el_12 = toErl 116
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 115
  in let bin_el_15 = toErl 117
  in let bin_el_16 = toErl 112
  in let bin_el_17 = toErl 112
  in let bin_el_18 = toErl 111
  in let bin_el_19 = toErl 114
  in let bin_el_20 = toErl 116
  in let bin_el_21 = toErl 101
  in let bin_el_22 = toErl 100
  in let bin_el_23 = toErl 32
  in let bin_el_24 = toErl 111
  in let bin_el_25 = toErl 110
  in let bin_el_26 = toErl 32
  in let bin_el_27 = toErl 115
  in let bin_el_28 = toErl 111
  in let bin_el_29 = toErl 99
  in let bin_el_30 = toErl 107
  in let bin_el_31 = toErl 101
  in let bin_el_32 = toErl 116
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_30 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_31 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_32 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eoverflow")] =
  let    bin_el_0 = toErl 111
  in let bin_el_1 = toErl 102
  in let bin_el_2 = toErl 102
  in let bin_el_3 = toErl 115
  in let bin_el_4 = toErl 101
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 32
  in let bin_el_7 = toErl 116
  in let bin_el_8 = toErl 111
  in let bin_el_9 = toErl 111
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 108
  in let bin_el_12 = toErl 97
  in let bin_el_13 = toErl 114
  in let bin_el_14 = toErl 103
  in let bin_el_15 = toErl 101
  in let bin_el_16 = toErl 32
  in let bin_el_17 = toErl 102
  in let bin_el_18 = toErl 111
  in let bin_el_19 = toErl 114
  in let bin_el_20 = toErl 32
  in let bin_el_21 = toErl 102
  in let bin_el_22 = toErl 105
  in let bin_el_23 = toErl 108
  in let bin_el_24 = toErl 101
  in let bin_el_25 = toErl 32
  in let bin_el_26 = toErl 115
  in let bin_el_27 = toErl 121
  in let bin_el_28 = toErl 115
  in let bin_el_29 = toErl 116
  in let bin_el_30 = toErl 101
  in let bin_el_31 = toErl 109
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_30 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_31 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eperm")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 116
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 111
  in let bin_el_5 = toErl 119
  in let bin_el_6 = toErl 110
  in let bin_el_7 = toErl 101
  in let bin_el_8 = toErl 114
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "epfnosupport")] =
  let    bin_el_0 = toErl 112
  in let bin_el_1 = toErl 114
  in let bin_el_2 = toErl 111
  in let bin_el_3 = toErl 116
  in let bin_el_4 = toErl 111
  in let bin_el_5 = toErl 99
  in let bin_el_6 = toErl 111
  in let bin_el_7 = toErl 108
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 102
  in let bin_el_10 = toErl 97
  in let bin_el_11 = toErl 109
  in let bin_el_12 = toErl 105
  in let bin_el_13 = toErl 108
  in let bin_el_14 = toErl 121
  in let bin_el_15 = toErl 32
  in let bin_el_16 = toErl 110
  in let bin_el_17 = toErl 111
  in let bin_el_18 = toErl 116
  in let bin_el_19 = toErl 32
  in let bin_el_20 = toErl 115
  in let bin_el_21 = toErl 117
  in let bin_el_22 = toErl 112
  in let bin_el_23 = toErl 112
  in let bin_el_24 = toErl 111
  in let bin_el_25 = toErl 114
  in let bin_el_26 = toErl 116
  in let bin_el_27 = toErl 101
  in let bin_el_28 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "epipe")] =
  let    bin_el_0 = toErl 98
  in let bin_el_1 = toErl 114
  in let bin_el_2 = toErl 111
  in let bin_el_3 = toErl 107
  in let bin_el_4 = toErl 101
  in let bin_el_5 = toErl 110
  in let bin_el_6 = toErl 32
  in let bin_el_7 = toErl 112
  in let bin_el_8 = toErl 105
  in let bin_el_9 = toErl 112
  in let bin_el_10 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eproclim")] =
  let    bin_el_0 = toErl 116
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 111
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 109
  in let bin_el_5 = toErl 97
  in let bin_el_6 = toErl 110
  in let bin_el_7 = toErl 121
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 112
  in let bin_el_10 = toErl 114
  in let bin_el_11 = toErl 111
  in let bin_el_12 = toErl 99
  in let bin_el_13 = toErl 101
  in let bin_el_14 = toErl 115
  in let bin_el_15 = toErl 115
  in let bin_el_16 = toErl 101
  in let bin_el_17 = toErl 115
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eprocunavail")] =
  let    bin_el_0 = toErl 98
  in let bin_el_1 = toErl 97
  in let bin_el_2 = toErl 100
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 112
  in let bin_el_5 = toErl 114
  in let bin_el_6 = toErl 111
  in let bin_el_7 = toErl 99
  in let bin_el_8 = toErl 101
  in let bin_el_9 = toErl 100
  in let bin_el_10 = toErl 117
  in let bin_el_11 = toErl 114
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 102
  in let bin_el_15 = toErl 111
  in let bin_el_16 = toErl 114
  in let bin_el_17 = toErl 32
  in let bin_el_18 = toErl 112
  in let bin_el_19 = toErl 114
  in let bin_el_20 = toErl 111
  in let bin_el_21 = toErl 103
  in let bin_el_22 = toErl 114
  in let bin_el_23 = toErl 97
  in let bin_el_24 = toErl 109
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eprogmismatch")] =
  let    bin_el_0 = toErl 112
  in let bin_el_1 = toErl 114
  in let bin_el_2 = toErl 111
  in let bin_el_3 = toErl 103
  in let bin_el_4 = toErl 114
  in let bin_el_5 = toErl 97
  in let bin_el_6 = toErl 109
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 118
  in let bin_el_9 = toErl 101
  in let bin_el_10 = toErl 114
  in let bin_el_11 = toErl 115
  in let bin_el_12 = toErl 105
  in let bin_el_13 = toErl 111
  in let bin_el_14 = toErl 110
  in let bin_el_15 = toErl 32
  in let bin_el_16 = toErl 119
  in let bin_el_17 = toErl 114
  in let bin_el_18 = toErl 111
  in let bin_el_19 = toErl 110
  in let bin_el_20 = toErl 103
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eprogunavail")] =
  let    bin_el_0 = toErl 82
  in let bin_el_1 = toErl 80
  in let bin_el_2 = toErl 67
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 112
  in let bin_el_5 = toErl 114
  in let bin_el_6 = toErl 111
  in let bin_el_7 = toErl 103
  in let bin_el_8 = toErl 114
  in let bin_el_9 = toErl 97
  in let bin_el_10 = toErl 109
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 110
  in let bin_el_13 = toErl 111
  in let bin_el_14 = toErl 116
  in let bin_el_15 = toErl 32
  in let bin_el_16 = toErl 97
  in let bin_el_17 = toErl 118
  in let bin_el_18 = toErl 97
  in let bin_el_19 = toErl 105
  in let bin_el_20 = toErl 108
  in let bin_el_21 = toErl 97
  in let bin_el_22 = toErl 98
  in let bin_el_23 = toErl 108
  in let bin_el_24 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eproto")] =
  let    bin_el_0 = toErl 112
  in let bin_el_1 = toErl 114
  in let bin_el_2 = toErl 111
  in let bin_el_3 = toErl 116
  in let bin_el_4 = toErl 111
  in let bin_el_5 = toErl 99
  in let bin_el_6 = toErl 111
  in let bin_el_7 = toErl 108
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 101
  in let bin_el_10 = toErl 114
  in let bin_el_11 = toErl 114
  in let bin_el_12 = toErl 111
  in let bin_el_13 = toErl 114
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eprotonosupport")] =
  let    bin_el_0 = toErl 112
  in let bin_el_1 = toErl 114
  in let bin_el_2 = toErl 111
  in let bin_el_3 = toErl 116
  in let bin_el_4 = toErl 111
  in let bin_el_5 = toErl 99
  in let bin_el_6 = toErl 111
  in let bin_el_7 = toErl 108
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 110
  in let bin_el_10 = toErl 111
  in let bin_el_11 = toErl 116
  in let bin_el_12 = toErl 32
  in let bin_el_13 = toErl 115
  in let bin_el_14 = toErl 117
  in let bin_el_15 = toErl 112
  in let bin_el_16 = toErl 112
  in let bin_el_17 = toErl 111
  in let bin_el_18 = toErl 114
  in let bin_el_19 = toErl 101
  in let bin_el_20 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eprototype")] =
  let    bin_el_0 = toErl 112
  in let bin_el_1 = toErl 114
  in let bin_el_2 = toErl 111
  in let bin_el_3 = toErl 116
  in let bin_el_4 = toErl 111
  in let bin_el_5 = toErl 99
  in let bin_el_6 = toErl 111
  in let bin_el_7 = toErl 108
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 119
  in let bin_el_10 = toErl 114
  in let bin_el_11 = toErl 111
  in let bin_el_12 = toErl 110
  in let bin_el_13 = toErl 103
  in let bin_el_14 = toErl 32
  in let bin_el_15 = toErl 116
  in let bin_el_16 = toErl 121
  in let bin_el_17 = toErl 112
  in let bin_el_18 = toErl 101
  in let bin_el_19 = toErl 32
  in let bin_el_20 = toErl 102
  in let bin_el_21 = toErl 111
  in let bin_el_22 = toErl 114
  in let bin_el_23 = toErl 32
  in let bin_el_24 = toErl 115
  in let bin_el_25 = toErl 111
  in let bin_el_26 = toErl 99
  in let bin_el_27 = toErl 107
  in let bin_el_28 = toErl 101
  in let bin_el_29 = toErl 116
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "erange")] =
  let    bin_el_0 = toErl 109
  in let bin_el_1 = toErl 97
  in let bin_el_2 = toErl 116
  in let bin_el_3 = toErl 104
  in let bin_el_4 = toErl 32
  in let bin_el_5 = toErl 114
  in let bin_el_6 = toErl 101
  in let bin_el_7 = toErl 115
  in let bin_el_8 = toErl 117
  in let bin_el_9 = toErl 108
  in let bin_el_10 = toErl 116
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 117
  in let bin_el_13 = toErl 110
  in let bin_el_14 = toErl 114
  in let bin_el_15 = toErl 101
  in let bin_el_16 = toErl 112
  in let bin_el_17 = toErl 114
  in let bin_el_18 = toErl 101
  in let bin_el_19 = toErl 115
  in let bin_el_20 = toErl 101
  in let bin_el_21 = toErl 110
  in let bin_el_22 = toErl 116
  in let bin_el_23 = toErl 97
  in let bin_el_24 = toErl 98
  in let bin_el_25 = toErl 108
  in let bin_el_26 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "erefused")] =
  let    bin_el_0 = toErl 69
  in let bin_el_1 = toErl 82
  in let bin_el_2 = toErl 69
  in let bin_el_3 = toErl 70
  in let bin_el_4 = toErl 85
  in let bin_el_5 = toErl 83
  in let bin_el_6 = toErl 69
  in let bin_el_7 = toErl 68
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eremchg")] =
  let    bin_el_0 = toErl 114
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 109
  in let bin_el_3 = toErl 111
  in let bin_el_4 = toErl 116
  in let bin_el_5 = toErl 101
  in let bin_el_6 = toErl 32
  in let bin_el_7 = toErl 97
  in let bin_el_8 = toErl 100
  in let bin_el_9 = toErl 100
  in let bin_el_10 = toErl 114
  in let bin_el_11 = toErl 101
  in let bin_el_12 = toErl 115
  in let bin_el_13 = toErl 115
  in let bin_el_14 = toErl 32
  in let bin_el_15 = toErl 99
  in let bin_el_16 = toErl 104
  in let bin_el_17 = toErl 97
  in let bin_el_18 = toErl 110
  in let bin_el_19 = toErl 103
  in let bin_el_20 = toErl 101
  in let bin_el_21 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eremdev")] =
  let    bin_el_0 = toErl 114
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 109
  in let bin_el_3 = toErl 111
  in let bin_el_4 = toErl 116
  in let bin_el_5 = toErl 101
  in let bin_el_6 = toErl 32
  in let bin_el_7 = toErl 100
  in let bin_el_8 = toErl 101
  in let bin_el_9 = toErl 118
  in let bin_el_10 = toErl 105
  in let bin_el_11 = toErl 99
  in let bin_el_12 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eremote")] =
  let    bin_el_0 = toErl 112
  in let bin_el_1 = toErl 97
  in let bin_el_2 = toErl 116
  in let bin_el_3 = toErl 104
  in let bin_el_4 = toErl 110
  in let bin_el_5 = toErl 97
  in let bin_el_6 = toErl 109
  in let bin_el_7 = toErl 101
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 104
  in let bin_el_10 = toErl 105
  in let bin_el_11 = toErl 116
  in let bin_el_12 = toErl 32
  in let bin_el_13 = toErl 114
  in let bin_el_14 = toErl 101
  in let bin_el_15 = toErl 109
  in let bin_el_16 = toErl 111
  in let bin_el_17 = toErl 116
  in let bin_el_18 = toErl 101
  in let bin_el_19 = toErl 32
  in let bin_el_20 = toErl 102
  in let bin_el_21 = toErl 105
  in let bin_el_22 = toErl 108
  in let bin_el_23 = toErl 101
  in let bin_el_24 = toErl 32
  in let bin_el_25 = toErl 115
  in let bin_el_26 = toErl 121
  in let bin_el_27 = toErl 115
  in let bin_el_28 = toErl 116
  in let bin_el_29 = toErl 101
  in let bin_el_30 = toErl 109
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_30 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eremoteio")] =
  let    bin_el_0 = toErl 114
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 109
  in let bin_el_3 = toErl 111
  in let bin_el_4 = toErl 116
  in let bin_el_5 = toErl 101
  in let bin_el_6 = toErl 32
  in let bin_el_7 = toErl 105
  in let bin_el_8 = toErl 47
  in let bin_el_9 = toErl 111
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 101
  in let bin_el_12 = toErl 114
  in let bin_el_13 = toErl 114
  in let bin_el_14 = toErl 111
  in let bin_el_15 = toErl 114
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eremoterelease")] =
  let    bin_el_0 = toErl 69
  in let bin_el_1 = toErl 82
  in let bin_el_2 = toErl 69
  in let bin_el_3 = toErl 77
  in let bin_el_4 = toErl 79
  in let bin_el_5 = toErl 84
  in let bin_el_6 = toErl 69
  in let bin_el_7 = toErl 82
  in let bin_el_8 = toErl 69
  in let bin_el_9 = toErl 76
  in let bin_el_10 = toErl 69
  in let bin_el_11 = toErl 65
  in let bin_el_12 = toErl 83
  in let bin_el_13 = toErl 69
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "erofs")] =
  let    bin_el_0 = toErl 114
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 97
  in let bin_el_3 = toErl 100
  in let bin_el_4 = toErl 45
  in let bin_el_5 = toErl 111
  in let bin_el_6 = toErl 110
  in let bin_el_7 = toErl 108
  in let bin_el_8 = toErl 121
  in let bin_el_9 = toErl 32
  in let bin_el_10 = toErl 102
  in let bin_el_11 = toErl 105
  in let bin_el_12 = toErl 108
  in let bin_el_13 = toErl 101
  in let bin_el_14 = toErl 32
  in let bin_el_15 = toErl 115
  in let bin_el_16 = toErl 121
  in let bin_el_17 = toErl 115
  in let bin_el_18 = toErl 116
  in let bin_el_19 = toErl 101
  in let bin_el_20 = toErl 109
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "erpcmismatch")] =
  let    bin_el_0 = toErl 82
  in let bin_el_1 = toErl 80
  in let bin_el_2 = toErl 67
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 118
  in let bin_el_5 = toErl 101
  in let bin_el_6 = toErl 114
  in let bin_el_7 = toErl 115
  in let bin_el_8 = toErl 105
  in let bin_el_9 = toErl 111
  in let bin_el_10 = toErl 110
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 105
  in let bin_el_13 = toErl 115
  in let bin_el_14 = toErl 32
  in let bin_el_15 = toErl 119
  in let bin_el_16 = toErl 114
  in let bin_el_17 = toErl 111
  in let bin_el_18 = toErl 110
  in let bin_el_19 = toErl 103
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "erremote")] =
  let    bin_el_0 = toErl 111
  in let bin_el_1 = toErl 98
  in let bin_el_2 = toErl 106
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 99
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 32
  in let bin_el_7 = toErl 105
  in let bin_el_8 = toErl 115
  in let bin_el_9 = toErl 32
  in let bin_el_10 = toErl 114
  in let bin_el_11 = toErl 101
  in let bin_el_12 = toErl 109
  in let bin_el_13 = toErl 111
  in let bin_el_14 = toErl 116
  in let bin_el_15 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eshutdown")] =
  let    bin_el_0 = toErl 99
  in let bin_el_1 = toErl 97
  in let bin_el_2 = toErl 110
  in let bin_el_3 = toErl 39
  in let bin_el_4 = toErl 116
  in let bin_el_5 = toErl 32
  in let bin_el_6 = toErl 115
  in let bin_el_7 = toErl 101
  in let bin_el_8 = toErl 110
  in let bin_el_9 = toErl 100
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 97
  in let bin_el_12 = toErl 102
  in let bin_el_13 = toErl 116
  in let bin_el_14 = toErl 101
  in let bin_el_15 = toErl 114
  in let bin_el_16 = toErl 32
  in let bin_el_17 = toErl 115
  in let bin_el_18 = toErl 111
  in let bin_el_19 = toErl 99
  in let bin_el_20 = toErl 107
  in let bin_el_21 = toErl 101
  in let bin_el_22 = toErl 116
  in let bin_el_23 = toErl 32
  in let bin_el_24 = toErl 115
  in let bin_el_25 = toErl 104
  in let bin_el_26 = toErl 117
  in let bin_el_27 = toErl 116
  in let bin_el_28 = toErl 100
  in let bin_el_29 = toErl 111
  in let bin_el_30 = toErl 119
  in let bin_el_31 = toErl 110
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_30 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_31 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "esocktnosupport")] =
  let    bin_el_0 = toErl 115
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 99
  in let bin_el_3 = toErl 107
  in let bin_el_4 = toErl 101
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 32
  in let bin_el_7 = toErl 116
  in let bin_el_8 = toErl 121
  in let bin_el_9 = toErl 112
  in let bin_el_10 = toErl 101
  in let bin_el_11 = toErl 32
  in let bin_el_12 = toErl 110
  in let bin_el_13 = toErl 111
  in let bin_el_14 = toErl 116
  in let bin_el_15 = toErl 32
  in let bin_el_16 = toErl 115
  in let bin_el_17 = toErl 117
  in let bin_el_18 = toErl 112
  in let bin_el_19 = toErl 112
  in let bin_el_20 = toErl 111
  in let bin_el_21 = toErl 114
  in let bin_el_22 = toErl 116
  in let bin_el_23 = toErl 101
  in let bin_el_24 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "espipe")] =
  let    bin_el_0 = toErl 105
  in let bin_el_1 = toErl 110
  in let bin_el_2 = toErl 118
  in let bin_el_3 = toErl 97
  in let bin_el_4 = toErl 108
  in let bin_el_5 = toErl 105
  in let bin_el_6 = toErl 100
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 115
  in let bin_el_9 = toErl 101
  in let bin_el_10 = toErl 101
  in let bin_el_11 = toErl 107
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "esrch")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 32
  in let bin_el_3 = toErl 115
  in let bin_el_4 = toErl 117
  in let bin_el_5 = toErl 99
  in let bin_el_6 = toErl 104
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 112
  in let bin_el_9 = toErl 114
  in let bin_el_10 = toErl 111
  in let bin_el_11 = toErl 99
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 115
  in let bin_el_14 = toErl 115
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "esrmnt")] =
  let    bin_el_0 = toErl 115
  in let bin_el_1 = toErl 114
  in let bin_el_2 = toErl 109
  in let bin_el_3 = toErl 111
  in let bin_el_4 = toErl 117
  in let bin_el_5 = toErl 110
  in let bin_el_6 = toErl 116
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 101
  in let bin_el_9 = toErl 114
  in let bin_el_10 = toErl 114
  in let bin_el_11 = toErl 111
  in let bin_el_12 = toErl 114
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "estale")] =
  let    bin_el_0 = toErl 115
  in let bin_el_1 = toErl 116
  in let bin_el_2 = toErl 97
  in let bin_el_3 = toErl 108
  in let bin_el_4 = toErl 101
  in let bin_el_5 = toErl 32
  in let bin_el_6 = toErl 114
  in let bin_el_7 = toErl 101
  in let bin_el_8 = toErl 109
  in let bin_el_9 = toErl 111
  in let bin_el_10 = toErl 116
  in let bin_el_11 = toErl 101
  in let bin_el_12 = toErl 32
  in let bin_el_13 = toErl 102
  in let bin_el_14 = toErl 105
  in let bin_el_15 = toErl 108
  in let bin_el_16 = toErl 101
  in let bin_el_17 = toErl 32
  in let bin_el_18 = toErl 104
  in let bin_el_19 = toErl 97
  in let bin_el_20 = toErl 110
  in let bin_el_21 = toErl 100
  in let bin_el_22 = toErl 108
  in let bin_el_23 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "esuccess")] =
  let    bin_el_0 = toErl 69
  in let bin_el_1 = toErl 114
  in let bin_el_2 = toErl 114
  in let bin_el_3 = toErl 111
  in let bin_el_4 = toErl 114
  in let bin_el_5 = toErl 32
  in let bin_el_6 = toErl 48
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "etime")] =
  let    bin_el_0 = toErl 116
  in let bin_el_1 = toErl 105
  in let bin_el_2 = toErl 109
  in let bin_el_3 = toErl 101
  in let bin_el_4 = toErl 114
  in let bin_el_5 = toErl 32
  in let bin_el_6 = toErl 101
  in let bin_el_7 = toErl 120
  in let bin_el_8 = toErl 112
  in let bin_el_9 = toErl 105
  in let bin_el_10 = toErl 114
  in let bin_el_11 = toErl 101
  in let bin_el_12 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "etimedout")] =
  let    bin_el_0 = toErl 99
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 110
  in let bin_el_3 = toErl 110
  in let bin_el_4 = toErl 101
  in let bin_el_5 = toErl 99
  in let bin_el_6 = toErl 116
  in let bin_el_7 = toErl 105
  in let bin_el_8 = toErl 111
  in let bin_el_9 = toErl 110
  in let bin_el_10 = toErl 32
  in let bin_el_11 = toErl 116
  in let bin_el_12 = toErl 105
  in let bin_el_13 = toErl 109
  in let bin_el_14 = toErl 101
  in let bin_el_15 = toErl 100
  in let bin_el_16 = toErl 32
  in let bin_el_17 = toErl 111
  in let bin_el_18 = toErl 117
  in let bin_el_19 = toErl 116
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "etoomanyrefs")] =
  let    bin_el_0 = toErl 116
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 111
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 109
  in let bin_el_5 = toErl 97
  in let bin_el_6 = toErl 110
  in let bin_el_7 = toErl 121
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 114
  in let bin_el_10 = toErl 101
  in let bin_el_11 = toErl 102
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 114
  in let bin_el_14 = toErl 101
  in let bin_el_15 = toErl 110
  in let bin_el_16 = toErl 99
  in let bin_el_17 = toErl 101
  in let bin_el_18 = toErl 115
  in let bin_el_19 = toErl 58
  in let bin_el_20 = toErl 32
  in let bin_el_21 = toErl 99
  in let bin_el_22 = toErl 97
  in let bin_el_23 = toErl 110
  in let bin_el_24 = toErl 39
  in let bin_el_25 = toErl 116
  in let bin_el_26 = toErl 32
  in let bin_el_27 = toErl 115
  in let bin_el_28 = toErl 112
  in let bin_el_29 = toErl 108
  in let bin_el_30 = toErl 105
  in let bin_el_31 = toErl 99
  in let bin_el_32 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_30 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_31 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_32 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "etxtbsy")] =
  let    bin_el_0 = toErl 116
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 120
  in let bin_el_3 = toErl 116
  in let bin_el_4 = toErl 32
  in let bin_el_5 = toErl 102
  in let bin_el_6 = toErl 105
  in let bin_el_7 = toErl 108
  in let bin_el_8 = toErl 101
  in let bin_el_9 = toErl 32
  in let bin_el_10 = toErl 111
  in let bin_el_11 = toErl 114
  in let bin_el_12 = toErl 32
  in let bin_el_13 = toErl 112
  in let bin_el_14 = toErl 115
  in let bin_el_15 = toErl 101
  in let bin_el_16 = toErl 117
  in let bin_el_17 = toErl 100
  in let bin_el_18 = toErl 111
  in let bin_el_19 = toErl 45
  in let bin_el_20 = toErl 100
  in let bin_el_21 = toErl 101
  in let bin_el_22 = toErl 118
  in let bin_el_23 = toErl 105
  in let bin_el_24 = toErl 99
  in let bin_el_25 = toErl 101
  in let bin_el_26 = toErl 32
  in let bin_el_27 = toErl 98
  in let bin_el_28 = toErl 117
  in let bin_el_29 = toErl 115
  in let bin_el_30 = toErl 121
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_29 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_30 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "euclean")] =
  let    bin_el_0 = toErl 115
  in let bin_el_1 = toErl 116
  in let bin_el_2 = toErl 114
  in let bin_el_3 = toErl 117
  in let bin_el_4 = toErl 99
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 117
  in let bin_el_7 = toErl 114
  in let bin_el_8 = toErl 101
  in let bin_el_9 = toErl 32
  in let bin_el_10 = toErl 110
  in let bin_el_11 = toErl 101
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 100
  in let bin_el_14 = toErl 115
  in let bin_el_15 = toErl 32
  in let bin_el_16 = toErl 99
  in let bin_el_17 = toErl 108
  in let bin_el_18 = toErl 101
  in let bin_el_19 = toErl 97
  in let bin_el_20 = toErl 110
  in let bin_el_21 = toErl 105
  in let bin_el_22 = toErl 110
  in let bin_el_23 = toErl 103
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eunatch")] =
  let    bin_el_0 = toErl 112
  in let bin_el_1 = toErl 114
  in let bin_el_2 = toErl 111
  in let bin_el_3 = toErl 116
  in let bin_el_4 = toErl 111
  in let bin_el_5 = toErl 99
  in let bin_el_6 = toErl 111
  in let bin_el_7 = toErl 108
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 100
  in let bin_el_10 = toErl 114
  in let bin_el_11 = toErl 105
  in let bin_el_12 = toErl 118
  in let bin_el_13 = toErl 101
  in let bin_el_14 = toErl 114
  in let bin_el_15 = toErl 32
  in let bin_el_16 = toErl 110
  in let bin_el_17 = toErl 111
  in let bin_el_18 = toErl 116
  in let bin_el_19 = toErl 32
  in let bin_el_20 = toErl 97
  in let bin_el_21 = toErl 116
  in let bin_el_22 = toErl 116
  in let bin_el_23 = toErl 97
  in let bin_el_24 = toErl 99
  in let bin_el_25 = toErl 104
  in let bin_el_26 = toErl 101
  in let bin_el_27 = toErl 100
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eusers")] =
  let    bin_el_0 = toErl 116
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 111
  in let bin_el_3 = toErl 32
  in let bin_el_4 = toErl 109
  in let bin_el_5 = toErl 97
  in let bin_el_6 = toErl 110
  in let bin_el_7 = toErl 121
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 117
  in let bin_el_10 = toErl 115
  in let bin_el_11 = toErl 101
  in let bin_el_12 = toErl 114
  in let bin_el_13 = toErl 115
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "eversion")] =
  let    bin_el_0 = toErl 118
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 114
  in let bin_el_3 = toErl 115
  in let bin_el_4 = toErl 105
  in let bin_el_5 = toErl 111
  in let bin_el_6 = toErl 110
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 109
  in let bin_el_9 = toErl 105
  in let bin_el_10 = toErl 115
  in let bin_el_11 = toErl 109
  in let bin_el_12 = toErl 97
  in let bin_el_13 = toErl 116
  in let bin_el_14 = toErl 99
  in let bin_el_15 = toErl 104
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "ewouldblock")] =
  let    bin_el_0 = toErl 111
  in let bin_el_1 = toErl 112
  in let bin_el_2 = toErl 101
  in let bin_el_3 = toErl 114
  in let bin_el_4 = toErl 97
  in let bin_el_5 = toErl 116
  in let bin_el_6 = toErl 105
  in let bin_el_7 = toErl 111
  in let bin_el_8 = toErl 110
  in let bin_el_9 = toErl 32
  in let bin_el_10 = toErl 119
  in let bin_el_11 = toErl 111
  in let bin_el_12 = toErl 117
  in let bin_el_13 = toErl 108
  in let bin_el_14 = toErl 100
  in let bin_el_15 = toErl 32
  in let bin_el_16 = toErl 98
  in let bin_el_17 = toErl 108
  in let bin_el_18 = toErl 111
  in let bin_el_19 = toErl 99
  in let bin_el_20 = toErl 107
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "exdev")] =
  let    bin_el_0 = toErl 99
  in let bin_el_1 = toErl 114
  in let bin_el_2 = toErl 111
  in let bin_el_3 = toErl 115
  in let bin_el_4 = toErl 115
  in let bin_el_5 = toErl 45
  in let bin_el_6 = toErl 100
  in let bin_el_7 = toErl 111
  in let bin_el_8 = toErl 109
  in let bin_el_9 = toErl 97
  in let bin_el_10 = toErl 105
  in let bin_el_11 = toErl 110
  in let bin_el_12 = toErl 32
  in let bin_el_13 = toErl 108
  in let bin_el_14 = toErl 105
  in let bin_el_15 = toErl 110
  in let bin_el_16 = toErl 107
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "exfull")] =
  let    bin_el_0 = toErl 109
  in let bin_el_1 = toErl 101
  in let bin_el_2 = toErl 115
  in let bin_el_3 = toErl 115
  in let bin_el_4 = toErl 97
  in let bin_el_5 = toErl 103
  in let bin_el_6 = toErl 101
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 116
  in let bin_el_9 = toErl 97
  in let bin_el_10 = toErl 98
  in let bin_el_11 = toErl 108
  in let bin_el_12 = toErl 101
  in let bin_el_13 = toErl 115
  in let bin_el_14 = toErl 32
  in let bin_el_15 = toErl 102
  in let bin_el_16 = toErl 117
  in let bin_el_17 = toErl 108
  in let bin_el_18 = toErl 108
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "nxdomain")] =
  let    bin_el_0 = toErl 110
  in let bin_el_1 = toErl 111
  in let bin_el_2 = toErl 110
  in let bin_el_3 = toErl 45
  in let bin_el_4 = toErl 101
  in let bin_el_5 = toErl 120
  in let bin_el_6 = toErl 105
  in let bin_el_7 = toErl 115
  in let bin_el_8 = toErl 116
  in let bin_el_9 = toErl 105
  in let bin_el_10 = toErl 110
  in let bin_el_11 = toErl 103
  in let bin_el_12 = toErl 32
  in let bin_el_13 = toErl 100
  in let bin_el_14 = toErl 111
  in let bin_el_15 = toErl 109
  in let bin_el_16 = toErl 97
  in let bin_el_17 = toErl 105
  in let bin_el_18 = toErl 110
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "exbadport")] =
  let    bin_el_0 = toErl 105
  in let bin_el_1 = toErl 110
  in let bin_el_2 = toErl 101
  in let bin_el_3 = toErl 116
  in let bin_el_4 = toErl 95
  in let bin_el_5 = toErl 100
  in let bin_el_6 = toErl 114
  in let bin_el_7 = toErl 118
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 98
  in let bin_el_10 = toErl 97
  in let bin_el_11 = toErl 100
  in let bin_el_12 = toErl 32
  in let bin_el_13 = toErl 112
  in let bin_el_14 = toErl 111
  in let bin_el_15 = toErl 114
  in let bin_el_16 = toErl 116
  in let bin_el_17 = toErl 32
  in let bin_el_18 = toErl 115
  in let bin_el_19 = toErl 116
  in let bin_el_20 = toErl 97
  in let bin_el_21 = toErl 116
  in let bin_el_22 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [(ErlangAtom "exbadseq")] =
  let    bin_el_0 = toErl 105
  in let bin_el_1 = toErl 110
  in let bin_el_2 = toErl 101
  in let bin_el_3 = toErl 116
  in let bin_el_4 = toErl 95
  in let bin_el_5 = toErl 100
  in let bin_el_6 = toErl 114
  in let bin_el_7 = toErl 118
  in let bin_el_8 = toErl 32
  in let bin_el_9 = toErl 98
  in let bin_el_10 = toErl 97
  in let bin_el_11 = toErl 100
  in let bin_el_12 = toErl 32
  in let bin_el_13 = toErl 114
  in let bin_el_14 = toErl 101
  in let bin_el_15 = toErl 113
  in let bin_el_16 = toErl 117
  in let bin_el_17 = toErl 101
  in let bin_el_18 = toErl 115
  in let bin_el_19 = toErl 116
  in let bin_el_20 = toErl 32
  in let bin_el_21 = toErl 115
  in let bin_el_22 = toErl 101
  in let bin_el_23 = toErl 113
  in let bin_el_24 = toErl 117
  in let bin_el_25 = toErl 101
  in let bin_el_26 = toErl 110
  in let bin_el_27 = toErl 99
  in let bin_el_28 = toErl 101
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_19 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_20 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_21 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_22 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_23 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_24 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_25 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_26 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_27 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_28 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [_] =
  let    bin_el_0 = toErl 117
  in let bin_el_1 = toErl 110
  in let bin_el_2 = toErl 107
  in let bin_el_3 = toErl 110
  in let bin_el_4 = toErl 111
  in let bin_el_5 = toErl 119
  in let bin_el_6 = toErl 110
  in let bin_el_7 = toErl 32
  in let bin_el_8 = toErl 80
  in let bin_el_9 = toErl 79
  in let bin_el_10 = toErl 83
  in let bin_el_11 = toErl 73
  in let bin_el_12 = toErl 88
  in let bin_el_13 = toErl 32
  in let bin_el_14 = toErl 101
  in let bin_el_15 = toErl 114
  in let bin_el_16 = toErl 114
  in let bin_el_17 = toErl 111
  in let bin_el_18 = toErl 114
  in
    ErlangBinary
      (BIN.concat
         [BIN.fromInt bin_el_0 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_1 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_2 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_3 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_4 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_5 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_6 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_7 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_8 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_9 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_10 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_11 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_12 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_13 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_14 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_15 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_16 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_17 (toErl 8) 1 BIN.Big,
          BIN.fromInt bin_el_18 (toErl 8) 1 BIN.Big])
erlps__message_1__1 [arg_19] = EXC.function_clause unit
erlps__message_1__1 args =
  EXC.badarity (ErlangFun 1 (\ _ -> ErlangAtom "purs_tco_sucks"))
    args